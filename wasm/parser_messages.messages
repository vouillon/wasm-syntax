module_: LPAREN VALTYPE
##
## Ends in an error in state: 1.
##
## data -> LPAREN . DATA option(ID) datastring RPAREN [ LPAREN EOF ]
## data -> LPAREN . DATA option(ID) LPAREN MEMORY idx RPAREN LPAREN OFFSET expr RPAREN datastring RPAREN [ LPAREN EOF ]
## data -> LPAREN . DATA option(ID) LPAREN OFFSET expr RPAREN datastring RPAREN [ LPAREN EOF ]
## data -> LPAREN . DATA option(ID) LPAREN MEMORY idx RPAREN LPAREN instr RPAREN datastring RPAREN [ LPAREN EOF ]
## data -> LPAREN . DATA option(ID) LPAREN instr RPAREN datastring RPAREN [ LPAREN EOF ]
## export -> LPAREN . EXPORT name exportdesc RPAREN [ LPAREN EOF ]
## func -> LPAREN . FUNC option(ID) exports(typeuse(locals(instrs(RPAREN)))) [ LPAREN EOF ]
## func -> LPAREN . FUNC option(ID) exports(__anonymous_4) typeuse(__anonymous_5) RPAREN [ LPAREN EOF ]
## global -> LPAREN . GLOBAL option(ID) globaldesc RPAREN [ LPAREN EOF ]
## import -> LPAREN . IMPORT name name importdesc RPAREN [ LPAREN EOF ]
## module_ -> LPAREN . MODULE option(ID) list(modulefield) RPAREN EOF [ # ]
## rectype -> LPAREN . REC list(typedef) RPAREN [ LPAREN EOF ]
## typedef -> LPAREN . TYPE option(ID) subtype RPAREN [ LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

Expecting a module field.

module_: LPAREN TYPE LPAREN VALTYPE
##
## Ends in an error in state: 5.
##
## comptype -> LPAREN . ARRAY fieldtype RPAREN [ RPAREN ]
## comptype -> LPAREN . STRUCT list(field) RPAREN [ RPAREN ]
## functype -> LPAREN . FUNC params_and_results(RPAREN) [ RPAREN ]
## subtype -> LPAREN . SUB boption(FINAL) option(idx) comptype RPAREN [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

Expecting a subtype or directly a composite type declaration.

module_: LPAREN TYPE LPAREN SUB LPAREN VALTYPE
##
## Ends in an error in state: 13.
##
## comptype -> LPAREN . ARRAY fieldtype RPAREN [ RPAREN ]
## comptype -> LPAREN . STRUCT list(field) RPAREN [ RPAREN ]
## functype -> LPAREN . FUNC params_and_results(RPAREN) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

Expecting a composite type declaration.

module_: LPAREN TYPE LPAREN STRUCT VALTYPE
##
## Ends in an error in state: 14.
##
## comptype -> LPAREN STRUCT . list(field) RPAREN [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN STRUCT
##

Expecting a sequence of field declarations.

module_: LPAREN TYPE LPAREN STRUCT LPAREN VALTYPE
##
## Ends in an error in state: 15.
##
## field -> LPAREN . FIELD ID fieldtype RPAREN [ RPAREN LPAREN ]
## field -> LPAREN . FIELD list(fieldtype) RPAREN [ RPAREN LPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

Expecting 'field'.

module_: LPAREN TYPE LPAREN STRUCT LPAREN FIELD TYPE
##
## Ends in an error in state: 16.
##
## field -> LPAREN FIELD . ID fieldtype RPAREN [ RPAREN LPAREN ]
## field -> LPAREN FIELD . list(fieldtype) RPAREN [ RPAREN LPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN FIELD
##

Expecting a field identifier or a field type.

module_: LPAREN TYPE LPAREN ARRAY LPAREN MUT TYPE
##
## Ends in an error in state: 36.
##
## fieldtype -> LPAREN MUT . storagetype RPAREN [ VALTYPE RPAREN PACKEDTYPE LPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN MUT
##

Expecting a storage type.

module_: LPAREN GLOBAL LPAREN MUT LPAREN VALTYPE
##
## Ends in an error in state: 37.
##
## reftype -> LPAREN . REF boption(NULL) heaptype RPAREN [ VALTYPE TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

Expecting 'ref'.

module_: LPAREN TYPE LPAREN ARRAY LPAREN MUT VALTYPE VALTYPE
##
## Ends in an error in state: 39.
##
## fieldtype -> LPAREN MUT storagetype . RPAREN [ VALTYPE RPAREN PACKEDTYPE LPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN MUT storagetype
##

Expecting a closing parenthesis.

module_: LPAREN TYPE LPAREN STRUCT LPAREN FIELD ID TYPE
##
## Ends in an error in state: 42.
##
## field -> LPAREN FIELD ID . fieldtype RPAREN [ RPAREN LPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN FIELD ID
##

Expecting a field type.

module_: LPAREN TYPE LPAREN STRUCT LPAREN FIELD ID VALTYPE VALTYPE
##
## Ends in an error in state: 44.
##
## field -> LPAREN FIELD ID fieldtype . RPAREN [ RPAREN LPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN FIELD ID fieldtype
##

Expecting a closing parenthesis.

module_: LPAREN TYPE LPAREN STRUCT LPAREN FIELD VALTYPE TYPE
##
## Ends in an error in state: 48.
##
## list(fieldtype) -> fieldtype . list(fieldtype) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## fieldtype
##

Expecting a list of field types followed by a closing parenthesis.

module_: LPAREN TYPE LPAREN STRUCT LPAREN FIELD RPAREN VALTYPE
##
## Ends in an error in state: 52.
##
## list(field) -> field . list(field) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## field
##

Expecting a list of fields followed by closing parenthesis.

module_: LPAREN TYPE LPAREN FUNC LPAREN VALTYPE
##
## Ends in an error in state: 56.
##
## params(results(RPAREN)) -> LPAREN . PARAM ID valtype RPAREN params(results(RPAREN)) [ RPAREN ]
## params(results(RPAREN)) -> LPAREN . PARAM list(valtype) RPAREN params(results(RPAREN)) [ RPAREN ]
## results(RPAREN) -> LPAREN . RESULT list(valtype) RPAREN results(RPAREN) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

Expecting 'param' or 'result'.

module_: LPAREN TYPE LPAREN FUNC LPAREN RESULT TYPE
##
## Ends in an error in state: 57.
##
## results(RPAREN) -> LPAREN RESULT . list(valtype) RPAREN results(RPAREN) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN RESULT
##

Expecting a list of value types followed by a closing parenthesis.

module_: LPAREN TYPE LPAREN FUNC LPAREN PARAM VALTYPE TYPE
##
## Ends in an error in state: 58.
##
## list(valtype) -> valtype . list(valtype) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## valtype
##

Expecting a list of value types followed by a closing parenthesis.

module_: LPAREN TYPE LPAREN FUNC LPAREN PARAM TYPE
##
## Ends in an error in state: 64.
##
## params(results(RPAREN)) -> LPAREN PARAM . ID valtype RPAREN params(results(RPAREN)) [ RPAREN ]
## params(results(RPAREN)) -> LPAREN PARAM . list(valtype) RPAREN params(results(RPAREN)) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN PARAM
##

Expecting a parameter identifier or a value type.

module_: LPAREN TYPE LPAREN FUNC LPAREN PARAM ID TYPE
##
## Ends in an error in state: 65.
##
## params(results(RPAREN)) -> LPAREN PARAM ID . valtype RPAREN params(results(RPAREN)) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN PARAM ID
##

Expecting a value type.

module_: LPAREN TYPE LPAREN FUNC LPAREN PARAM ID VALTYPE VALTYPE
##
## Ends in an error in state: 66.
##
## params(results(RPAREN)) -> LPAREN PARAM ID valtype . RPAREN params(results(RPAREN)) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN PARAM ID valtype
##

Expecting a closing parenthesis.

module_: LPAREN TYPE LPAREN FUNC LPAREN RESULT RPAREN VALTYPE
##
## Ends in an error in state: 61.
##
## results(RPAREN) -> LPAREN RESULT list(valtype) RPAREN . results(RPAREN) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN RESULT list(valtype) RPAREN
##

Expecting a list of result types followed by a closing parenthesis.

module_: LPAREN TYPE LPAREN FUNC LPAREN RESULT RPAREN LPAREN VALTYPE
##
## Ends in an error in state: 62.
##
## results(RPAREN) -> LPAREN . RESULT list(valtype) RPAREN results(RPAREN) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

Expecting 'result'.

module_: LPAREN TYPE LPAREN ARRAY TYPE
##
## Ends in an error in state: 75.
##
## comptype -> LPAREN ARRAY . fieldtype RPAREN [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN ARRAY
##

Expecing a field type.

module_: LPAREN TYPE LPAREN ARRAY VALTYPE VALTYPE
##
## Ends in an error in state: 76.
##
## comptype -> LPAREN ARRAY fieldtype . RPAREN [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN ARRAY fieldtype
##

Expecting a closing parenthesis.

module_: LPAREN TYPE LPAREN SUB LPAREN FUNC RPAREN VALTYPE
##
## Ends in an error in state: 79.
##
## subtype -> LPAREN SUB boption(FINAL) option(idx) comptype . RPAREN [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN SUB boption(FINAL) option(idx) comptype
##

Expecting a closing parenthesis.

module_: LPAREN TYPE LPAREN FUNC RPAREN VALTYPE
##
## Ends in an error in state: 82.
##
## typedef -> LPAREN TYPE option(ID) subtype . RPAREN [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN TYPE option(ID) subtype
##

Expecting a closing parenthesis.

module_: LPAREN REC VALTYPE
##
## Ends in an error in state: 85.
##
## rectype -> LPAREN REC . list(typedef) RPAREN [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN REC
##

Expecting a list of type definitions.

module_: LPAREN REC LPAREN VALTYPE
##
## Ends in an error in state: 86.
##
## typedef -> LPAREN . TYPE option(ID) subtype RPAREN [ RPAREN LPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

Expecting 'type'.

module_: LPAREN REC LPAREN TYPE LPAREN FUNC RPAREN RPAREN VALTYPE
##
## Ends in an error in state: 87.
##
## list(typedef) -> typedef . list(typedef) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## typedef
##

Expecting a list of type definitions followed by a closing parenthesis.

module_: LPAREN MODULE VALTYPE
##
## Ends in an error in state: 91.
##
## module_ -> LPAREN MODULE . option(ID) list(modulefield) RPAREN EOF [ # ]
##
## The known suffix of the stack is as follows:
## LPAREN MODULE
##

Expecting a module identifier or a module field.

module_: LPAREN MODULE ID VALTYPE
##
## Ends in an error in state: 92.
##
## module_ -> LPAREN MODULE option(ID) . list(modulefield) RPAREN EOF [ # ]
##
## The known suffix of the stack is as follows:
## LPAREN MODULE option(ID)
##

Expecting a module field, or a closing parenthesis.

module_: LPAREN MODULE LPAREN VALTYPE
##
## Ends in an error in state: 93.
##
## data -> LPAREN . DATA option(ID) datastring RPAREN [ RPAREN LPAREN EOF ]
## data -> LPAREN . DATA option(ID) LPAREN MEMORY idx RPAREN LPAREN OFFSET expr RPAREN datastring RPAREN [ RPAREN LPAREN EOF ]
## data -> LPAREN . DATA option(ID) LPAREN OFFSET expr RPAREN datastring RPAREN [ RPAREN LPAREN EOF ]
## data -> LPAREN . DATA option(ID) LPAREN MEMORY idx RPAREN LPAREN instr RPAREN datastring RPAREN [ RPAREN LPAREN EOF ]
## data -> LPAREN . DATA option(ID) LPAREN instr RPAREN datastring RPAREN [ RPAREN LPAREN EOF ]
## export -> LPAREN . EXPORT name exportdesc RPAREN [ RPAREN LPAREN EOF ]
## func -> LPAREN . FUNC option(ID) exports(typeuse(locals(instrs(RPAREN)))) [ RPAREN LPAREN EOF ]
## func -> LPAREN . FUNC option(ID) exports(__anonymous_4) typeuse(__anonymous_5) RPAREN [ RPAREN LPAREN EOF ]
## global -> LPAREN . GLOBAL option(ID) globaldesc RPAREN [ RPAREN LPAREN EOF ]
## import -> LPAREN . IMPORT name name importdesc RPAREN [ RPAREN LPAREN EOF ]
## rectype -> LPAREN . REC list(typedef) RPAREN [ RPAREN LPAREN EOF ]
## typedef -> LPAREN . TYPE option(ID) subtype RPAREN [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

Expecting a module field.

module_: LPAREN IMPORT VALTYPE
##
## Ends in an error in state: 94.
##
## import -> LPAREN IMPORT . name name importdesc RPAREN [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN IMPORT
##

Expecting an imported module name.

module_: LPAREN IMPORT STRING VALTYPE
##
## Ends in an error in state: 96.
##
## import -> LPAREN IMPORT name . name importdesc RPAREN [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN IMPORT name
##

Expecting an imported name.

module_: LPAREN IMPORT STRING STRING VALTYPE
##
## Ends in an error in state: 97.
##
## import -> LPAREN IMPORT name name . importdesc RPAREN [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN IMPORT name name
##

Expecting an import descriptor.

module_: LPAREN GLOBAL LPAREN MUT TYPE
##
## Ends in an error in state: 102.
##
## globaltype -> LPAREN MUT . valtype RPAREN [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN MUT
##

Expecting a value type.

module_: LPAREN GLOBAL LPAREN MUT VALTYPE VALTYPE
##
## Ends in an error in state: 103.
##
## globaltype -> LPAREN MUT valtype . RPAREN [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN MUT valtype
##

Expecting a closing parenthesis.

module_: LPAREN GLOBAL LPAREN IMPORT VALTYPE
##
## Ends in an error in state: 122.
##
## globaldesc -> LPAREN IMPORT . name name RPAREN globaltype [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN IMPORT
##

Expecting an import module name.

module_: LPAREN GLOBAL LPAREN IMPORT STRING VALTYPE
##
## Ends in an error in state: 123.
##
## globaldesc -> LPAREN IMPORT name . name RPAREN globaltype [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN IMPORT name
##

Expecting an import name.

module_: LPAREN GLOBAL LPAREN IMPORT STRING STRING VALTYPE
##
## Ends in an error in state: 124.
##
## globaldesc -> LPAREN IMPORT name name . RPAREN globaltype [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN IMPORT name name
##

Expecting an opening parenthesis.

module_: LPAREN GLOBAL LPAREN IMPORT STRING STRING RPAREN TYPE
##
## Ends in an error in state: 125.
##
## globaldesc -> LPAREN IMPORT name name RPAREN . globaltype [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN IMPORT name name RPAREN
##

Expecting a global type.

module_: LPAREN GLOBAL LPAREN IMPORT STRING STRING RPAREN LPAREN VALTYPE
##
## Ends in an error in state: 101.
##
## globaltype -> LPAREN . MUT valtype RPAREN [ RPAREN ]
## reftype -> LPAREN . REF boption(NULL) heaptype RPAREN [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

Expecting 'mut' for a global type or 'ref' for a reference type.

module_: LPAREN GLOBAL LPAREN EXPORT VALTYPE
##
## Ends in an error in state: 127.
##
## globaldesc -> LPAREN EXPORT . name RPAREN globaldesc [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN EXPORT
##

Expecting an export name.

module_: LPAREN GLOBAL LPAREN EXPORT STRING VALTYPE
##
## Ends in an error in state: 128.
##
## globaldesc -> LPAREN EXPORT name . RPAREN globaldesc [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN EXPORT name
##

Expecting a closing parenthesis.

module_: LPAREN IMPORT STRING STRING LPAREN VALTYPE
##
## Ends in an error in state: 98.
##
## importdesc -> LPAREN . FUNC option(ID) typeuse(RPAREN) [ RPAREN ]
## importdesc -> LPAREN . GLOBAL option(ID) globaltype RPAREN [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

Expecting an import descriptor.

module_: LPAREN IMPORT STRING STRING LPAREN GLOBAL TYPE
##
## Ends in an error in state: 99.
##
## importdesc -> LPAREN GLOBAL . option(ID) globaltype RPAREN [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN GLOBAL
##

Expecting a global identifier or a global type.

module_: LPAREN IMPORT STRING STRING LPAREN GLOBAL ID TYPE
##
## Ends in an error in state: 100.
##
## importdesc -> LPAREN GLOBAL option(ID) . globaltype RPAREN [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN GLOBAL option(ID)
##

Expecting a global type.

module_: LPAREN IMPORT STRING STRING LPAREN GLOBAL VALTYPE VALTYPE
##
## Ends in an error in state: 106.
##
## importdesc -> LPAREN GLOBAL option(ID) globaltype . RPAREN [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN GLOBAL option(ID) globaltype
##

Expecting a closing parenthesis.

module_: LPAREN IMPORT STRING STRING LPAREN FUNC VALTYPE
##
## Ends in an error in state: 108.
##
## importdesc -> LPAREN FUNC . option(ID) typeuse(RPAREN) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN FUNC
##

Expecting a function identifier or a type use.

module_: LPAREN IMPORT STRING STRING LPAREN FUNC ID VALTYPE
##
## Ends in an error in state: 109.
##
## importdesc -> LPAREN FUNC option(ID) . typeuse(RPAREN) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN FUNC option(ID)
##

Expecting a type use.

module_: LPAREN IMPORT STRING STRING LPAREN FUNC LPAREN TYPE VALTYPE
##
## Ends in an error in state: 111.
##
## typeuse(RPAREN) -> LPAREN TYPE . idx RPAREN params_and_results(RPAREN) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN TYPE
##

Expecting a type index.

module_: LPAREN IMPORT STRING STRING LPAREN FUNC LPAREN TYPE NAT VALTYPE
##
## Ends in an error in state: 112.
##
## typeuse(RPAREN) -> LPAREN TYPE idx . RPAREN params_and_results(RPAREN) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN TYPE idx
##

Expecting a closing parenthesis.

module_: LPAREN IMPORT STRING STRING LPAREN FUNC RPAREN VALTYPE
##
## Ends in an error in state: 117.
##
## import -> LPAREN IMPORT name name importdesc . RPAREN [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN IMPORT name name importdesc
##

Expecting a closing parenthesis.

module_: LPAREN GLOBAL VALTYPE VALTYPE
##
## Ends in an error in state: 130.
##
## globaldesc -> globaltype . expr [ RPAREN ]
##
## The known suffix of the stack is as follows:
## globaltype
##

Expecting an expression.

module_: LPAREN GLOBAL VALTYPE STRUCT_NEW VALTYPE
##
## Ends in an error in state: 138.
##
## plaininstr -> STRUCT_NEW . idx [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## STRUCT_NEW
##

Expecting a type index.

module_: LPAREN GLOBAL VALTYPE REF_NULL VALTYPE
##
## Ends in an error in state: 150.
##
## plaininstr -> REF_NULL . heaptype [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## REF_NULL
##

Expecting a heap type.

module_: LPAREN GLOBAL VALTYPE REF_FUNC VALTYPE
##
## Ends in an error in state: 153.
##
## plaininstr -> REF_FUNC . idx [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## REF_FUNC
##

Expecting a function index.

module_: LPAREN GLOBAL VALTYPE I32_CONST VALTYPE
##
## Ends in an error in state: 212.
##
## plaininstr -> I32_CONST . i32 [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## I32_CONST
##

Expecting an integer constant.

module_: LPAREN GLOBAL VALTYPE ARRAY_NEW_FIXED VALTYPE
##
## Ends in an error in state: 241.
##
## plaininstr -> ARRAY_NEW_FIXED . idx u32 [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## ARRAY_NEW_FIXED
##

Expecting a type index.

module_: LPAREN GLOBAL VALTYPE ARRAY_NEW_FIXED NAT VALTYPE
##
## Ends in an error in state: 242.
##
## plaininstr -> ARRAY_NEW_FIXED idx . u32 [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## ARRAY_NEW_FIXED idx
##

Expecting an unsigned 32-bit integer.

module_: LPAREN GLOBAL VALTYPE I32_CONST INT VALTYPE
##
## Ends in an error in state: 404.
##
## instrs(__anonymous_3) -> plaininstr . instrs(__anonymous_3) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## plaininstr
##

Expecting a sequence of instructions followed by a closing parenthesis.

module_: LPAREN GLOBAL LPAREN IMPORT STRING STRING RPAREN VALTYPE VALTYPE
##
## Ends in an error in state: 432.
##
## global -> LPAREN GLOBAL option(ID) globaldesc . RPAREN [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN GLOBAL option(ID) globaldesc
##

Expecting ')'.

module_: LPAREN REC RPAREN VALTYPE
##
## Ends in an error in state: 582.
##
## list(modulefield) -> modulefield . list(modulefield) [ RPAREN EOF ]
##
## The known suffix of the stack is as follows:
## modulefield
##

Expecting a list of module fields.

module_: LPAREN MODULE LPAREN REC RPAREN EOF
##
## Ends in an error in state: 589.
##
## module_ -> LPAREN MODULE option(ID) list(modulefield) . RPAREN EOF [ # ]
##
## The known suffix of the stack is as follows:
## LPAREN MODULE option(ID) list(modulefield)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 582, spurious reduction of production list(modulefield) ->
## In state 583, spurious reduction of production list(modulefield) -> modulefield list(modulefield)
##

Expecting a module field or a closing parenthesis.

module_: LPAREN MODULE RPAREN VALTYPE
##
## Ends in an error in state: 590.
##
## module_ -> LPAREN MODULE option(ID) list(modulefield) RPAREN . EOF [ # ]
##
## The known suffix of the stack is as follows:
## LPAREN MODULE option(ID) list(modulefield) RPAREN
##

Garbage after the end of the module. Maybe you have closed too many parentheses.

module_: LPAREN REC RPAREN RPAREN
##
## Ends in an error in state: 593.
##
## module_ -> list(modulefield) . EOF [ # ]
##
## The known suffix of the stack is as follows:
## list(modulefield)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 582, spurious reduction of production list(modulefield) ->
## In state 583, spurious reduction of production list(modulefield) -> modulefield list(modulefield)
##

Expecting a module field.

module_: VALTYPE
##
## Ends in an error in state: 0.
##
## module_' -> . module_ [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN TYPE VALTYPE
##
## Ends in an error in state: 2.
##
## typedef -> LPAREN TYPE . option(ID) subtype RPAREN [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN TYPE ID VALTYPE
##
## Ends in an error in state: 4.
##
## typedef -> LPAREN TYPE option(ID) . subtype RPAREN [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN TYPE option(ID)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN TYPE LPAREN SUB VALTYPE
##
## Ends in an error in state: 6.
##
## subtype -> LPAREN SUB . boption(FINAL) option(idx) comptype RPAREN [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN SUB
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN TYPE LPAREN SUB FINAL VALTYPE
##
## Ends in an error in state: 8.
##
## subtype -> LPAREN SUB boption(FINAL) . option(idx) comptype RPAREN [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN SUB boption(FINAL)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN TYPE LPAREN SUB NAT VALTYPE
##
## Ends in an error in state: 12.
##
## subtype -> LPAREN SUB boption(FINAL) option(idx) . comptype RPAREN [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN SUB boption(FINAL) option(idx)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN TYPE LPAREN ARRAY LPAREN VALTYPE
##
## Ends in an error in state: 19.
##
## fieldtype -> LPAREN . MUT storagetype RPAREN [ VALTYPE RPAREN PACKEDTYPE LPAREN ]
## reftype -> LPAREN . REF boption(NULL) heaptype RPAREN [ VALTYPE RPAREN PACKEDTYPE LPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN GLOBAL LPAREN REF VALTYPE
##
## Ends in an error in state: 20.
##
## reftype -> LPAREN REF . boption(NULL) heaptype RPAREN [ VALTYPE TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST PACKEDTYPE LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN REF
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN GLOBAL LPAREN REF NULL VALTYPE
##
## Ends in an error in state: 22.
##
## reftype -> LPAREN REF boption(NULL) . heaptype RPAREN [ VALTYPE TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST PACKEDTYPE LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN REF boption(NULL)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN GLOBAL LPAREN REF NAT VALTYPE
##
## Ends in an error in state: 34.
##
## reftype -> LPAREN REF boption(NULL) heaptype . RPAREN [ VALTYPE TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST PACKEDTYPE LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN REF boption(NULL) heaptype
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN TYPE LPAREN FUNC VALTYPE
##
## Ends in an error in state: 54.
##
## functype -> LPAREN FUNC . params_and_results(RPAREN) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN FUNC
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN TYPE LPAREN FUNC LPAREN PARAM ID VALTYPE RPAREN VALTYPE
##
## Ends in an error in state: 67.
##
## params(results(RPAREN)) -> LPAREN PARAM ID valtype RPAREN . params(results(RPAREN)) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN PARAM ID valtype RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN TYPE LPAREN FUNC LPAREN PARAM RPAREN VALTYPE
##
## Ends in an error in state: 71.
##
## params(results(RPAREN)) -> LPAREN PARAM list(valtype) RPAREN . params(results(RPAREN)) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN PARAM list(valtype) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN IMPORT STRING STRING LPAREN FUNC LPAREN VALTYPE
##
## Ends in an error in state: 110.
##
## params(results(RPAREN)) -> LPAREN . PARAM ID valtype RPAREN params(results(RPAREN)) [ RPAREN ]
## params(results(RPAREN)) -> LPAREN . PARAM list(valtype) RPAREN params(results(RPAREN)) [ RPAREN ]
## results(RPAREN) -> LPAREN . RESULT list(valtype) RPAREN results(RPAREN) [ RPAREN ]
## typeuse(RPAREN) -> LPAREN . TYPE idx RPAREN params_and_results(RPAREN) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN IMPORT STRING STRING LPAREN FUNC LPAREN TYPE NAT RPAREN VALTYPE
##
## Ends in an error in state: 113.
##
## typeuse(RPAREN) -> LPAREN TYPE idx RPAREN . params_and_results(RPAREN) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN TYPE idx RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN GLOBAL TYPE
##
## Ends in an error in state: 119.
##
## global -> LPAREN GLOBAL . option(ID) globaldesc RPAREN [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN GLOBAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN GLOBAL ID TYPE
##
## Ends in an error in state: 120.
##
## global -> LPAREN GLOBAL option(ID) . globaldesc RPAREN [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN GLOBAL option(ID)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN GLOBAL LPAREN VALTYPE
##
## Ends in an error in state: 121.
##
## globaldesc -> LPAREN . IMPORT name name RPAREN globaltype [ RPAREN ]
## globaldesc -> LPAREN . EXPORT name RPAREN globaldesc [ RPAREN ]
## globaltype -> LPAREN . MUT valtype RPAREN [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## reftype -> LPAREN . REF boption(NULL) heaptype RPAREN [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN GLOBAL LPAREN EXPORT STRING RPAREN TYPE
##
## Ends in an error in state: 129.
##
## globaldesc -> LPAREN EXPORT name RPAREN . globaldesc [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN EXPORT name RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC TUPLE_MAKE VALTYPE
##
## Ends in an error in state: 131.
##
## plaininstr -> TUPLE_MAKE . u32 [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## TUPLE_MAKE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC STRUCT_SET VALTYPE
##
## Ends in an error in state: 133.
##
## plaininstr -> STRUCT_SET . idx idx [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## STRUCT_SET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC STRUCT_SET NAT VALTYPE
##
## Ends in an error in state: 134.
##
## plaininstr -> STRUCT_SET idx . idx [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## STRUCT_SET idx
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC STRUCT_NEW_DEFAULT VALTYPE
##
## Ends in an error in state: 136.
##
## plaininstr -> STRUCT_NEW_DEFAULT . idx [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## STRUCT_NEW_DEFAULT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC STRUCT_GET VALTYPE
##
## Ends in an error in state: 140.
##
## plaininstr -> STRUCT_GET . idx idx [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## STRUCT_GET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC STRUCT_GET NAT VALTYPE
##
## Ends in an error in state: 141.
##
## plaininstr -> STRUCT_GET idx . idx [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## STRUCT_GET idx
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC RETURN_CALL_REF VALTYPE
##
## Ends in an error in state: 143.
##
## plaininstr -> RETURN_CALL_REF . idx [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## RETURN_CALL_REF
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN GLOBAL VALTYPE RETURN_CALL_INDIRECT VALTYPE
##
## Ends in an error in state: 145.
##
## callindirect(instrs(__anonymous_3)) -> RETURN_CALL_INDIRECT . idx typeuse(instrs(__anonymous_3)) [ RPAREN ]
## callindirect(instrs(__anonymous_3)) -> RETURN_CALL_INDIRECT . typeuse(instrs(__anonymous_3)) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## RETURN_CALL_INDIRECT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC RETURN_CALL VALTYPE
##
## Ends in an error in state: 146.
##
## plaininstr -> RETURN_CALL . idx [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## RETURN_CALL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC REF_TEST VALTYPE
##
## Ends in an error in state: 148.
##
## plaininstr -> REF_TEST . reftype [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## REF_TEST
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC REF_CAST VALTYPE
##
## Ends in an error in state: 155.
##
## plaininstr -> REF_CAST . reftype [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## REF_CAST
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN GLOBAL VALTYPE CALL_INDIRECT LPAREN VALTYPE
##
## Ends in an error in state: 157.
##
## foldedinstr -> LPAREN . plaininstr list(foldedinstr) RPAREN [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . IF label blocktype(foldedinstrs(__anonymous_1)) option(__anonymous_2) RPAREN [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . BLOCK label blocktype(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . LOOP label blocktype(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## params(results(instrs(__anonymous_3))) -> LPAREN . PARAM ID valtype RPAREN params(results(instrs(__anonymous_3))) [ RPAREN ]
## params(results(instrs(__anonymous_3))) -> LPAREN . PARAM list(valtype) RPAREN params(results(instrs(__anonymous_3))) [ RPAREN ]
## results(instrs(__anonymous_3)) -> LPAREN . RESULT list(valtype) RPAREN results(instrs(__anonymous_3)) [ RPAREN ]
## typeuse(instrs(__anonymous_3)) -> LPAREN . TYPE idx RPAREN params_and_results(instrs(__anonymous_3)) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN GLOBAL VALTYPE CALL_INDIRECT LPAREN TYPE VALTYPE
##
## Ends in an error in state: 158.
##
## typeuse(instrs(__anonymous_3)) -> LPAREN TYPE . idx RPAREN params_and_results(instrs(__anonymous_3)) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN GLOBAL VALTYPE CALL_INDIRECT LPAREN TYPE NAT VALTYPE
##
## Ends in an error in state: 159.
##
## typeuse(instrs(__anonymous_3)) -> LPAREN TYPE idx . RPAREN params_and_results(instrs(__anonymous_3)) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN TYPE idx
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN GLOBAL VALTYPE CALL_INDIRECT LPAREN TYPE NAT RPAREN VALTYPE
##
## Ends in an error in state: 160.
##
## typeuse(instrs(__anonymous_3)) -> LPAREN TYPE idx RPAREN . params_and_results(instrs(__anonymous_3)) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN TYPE idx RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN GLOBAL VALTYPE CALL_INDIRECT LPAREN PARAM RPAREN LPAREN VALTYPE
##
## Ends in an error in state: 161.
##
## foldedinstr -> LPAREN . plaininstr list(foldedinstr) RPAREN [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . IF label blocktype(foldedinstrs(__anonymous_1)) option(__anonymous_2) RPAREN [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . BLOCK label blocktype(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . LOOP label blocktype(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## params(results(instrs(__anonymous_3))) -> LPAREN . PARAM ID valtype RPAREN params(results(instrs(__anonymous_3))) [ RPAREN ]
## params(results(instrs(__anonymous_3))) -> LPAREN . PARAM list(valtype) RPAREN params(results(instrs(__anonymous_3))) [ RPAREN ]
## results(instrs(__anonymous_3)) -> LPAREN . RESULT list(valtype) RPAREN results(instrs(__anonymous_3)) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN GLOBAL VALTYPE CALL_INDIRECT LPAREN RESULT TYPE
##
## Ends in an error in state: 162.
##
## results(instrs(__anonymous_3)) -> LPAREN RESULT . list(valtype) RPAREN results(instrs(__anonymous_3)) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN RESULT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN GLOBAL VALTYPE CALL_INDIRECT LPAREN RESULT RPAREN VALTYPE
##
## Ends in an error in state: 164.
##
## results(instrs(__anonymous_3)) -> LPAREN RESULT list(valtype) RPAREN . results(instrs(__anonymous_3)) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN RESULT list(valtype) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN GLOBAL VALTYPE CALL_INDIRECT LPAREN RESULT RPAREN LPAREN VALTYPE
##
## Ends in an error in state: 165.
##
## foldedinstr -> LPAREN . plaininstr list(foldedinstr) RPAREN [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . IF label blocktype(foldedinstrs(__anonymous_1)) option(__anonymous_2) RPAREN [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . BLOCK label blocktype(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . LOOP label blocktype(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## results(instrs(__anonymous_3)) -> LPAREN . RESULT list(valtype) RPAREN results(instrs(__anonymous_3)) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN LOOP VALTYPE
##
## Ends in an error in state: 166.
##
## foldedinstr -> LPAREN LOOP . label blocktype(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN LOOP
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN LOOP ID VALTYPE
##
## Ends in an error in state: 168.
##
## foldedinstr -> LPAREN LOOP label . blocktype(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN LOOP label
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC RETURN_CALL_INDIRECT VALTYPE
##
## Ends in an error in state: 170.
##
## callindirect(instrs(RPAREN)) -> RETURN_CALL_INDIRECT . idx typeuse(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET EOF END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## callindirect(instrs(RPAREN)) -> RETURN_CALL_INDIRECT . typeuse(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET EOF END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## RETURN_CALL_INDIRECT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC CALL_INDIRECT LPAREN VALTYPE
##
## Ends in an error in state: 171.
##
## foldedinstr -> LPAREN . plaininstr list(foldedinstr) RPAREN [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . IF label blocktype(foldedinstrs(__anonymous_1)) option(__anonymous_2) RPAREN [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . BLOCK label blocktype(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . LOOP label blocktype(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## params(results(instrs(RPAREN))) -> LPAREN . PARAM ID valtype RPAREN params(results(instrs(RPAREN))) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET EOF END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## params(results(instrs(RPAREN))) -> LPAREN . PARAM list(valtype) RPAREN params(results(instrs(RPAREN))) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET EOF END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## results(instrs(RPAREN)) -> LPAREN . RESULT list(valtype) RPAREN results(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET EOF END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## typeuse(instrs(RPAREN)) -> LPAREN . TYPE idx RPAREN params_and_results(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET EOF END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC CALL_INDIRECT LPAREN TYPE VALTYPE
##
## Ends in an error in state: 172.
##
## typeuse(instrs(RPAREN)) -> LPAREN TYPE . idx RPAREN params_and_results(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET EOF END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC CALL_INDIRECT LPAREN TYPE NAT VALTYPE
##
## Ends in an error in state: 173.
##
## typeuse(instrs(RPAREN)) -> LPAREN TYPE idx . RPAREN params_and_results(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET EOF END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN TYPE idx
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC CALL_INDIRECT LPAREN TYPE NAT RPAREN VALTYPE
##
## Ends in an error in state: 174.
##
## typeuse(instrs(RPAREN)) -> LPAREN TYPE idx RPAREN . params_and_results(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET EOF END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN TYPE idx RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC CALL_INDIRECT LPAREN PARAM RPAREN LPAREN VALTYPE
##
## Ends in an error in state: 175.
##
## foldedinstr -> LPAREN . plaininstr list(foldedinstr) RPAREN [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . IF label blocktype(foldedinstrs(__anonymous_1)) option(__anonymous_2) RPAREN [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . BLOCK label blocktype(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . LOOP label blocktype(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## params(results(instrs(RPAREN))) -> LPAREN . PARAM ID valtype RPAREN params(results(instrs(RPAREN))) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET EOF END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## params(results(instrs(RPAREN))) -> LPAREN . PARAM list(valtype) RPAREN params(results(instrs(RPAREN))) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET EOF END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## results(instrs(RPAREN)) -> LPAREN . RESULT list(valtype) RPAREN results(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET EOF END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC CALL_INDIRECT LPAREN RESULT TYPE
##
## Ends in an error in state: 176.
##
## results(instrs(RPAREN)) -> LPAREN RESULT . list(valtype) RPAREN results(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET EOF END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN RESULT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC CALL_INDIRECT LPAREN RESULT RPAREN VALTYPE
##
## Ends in an error in state: 178.
##
## results(instrs(RPAREN)) -> LPAREN RESULT list(valtype) RPAREN . results(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET EOF END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN RESULT list(valtype) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC CALL_INDIRECT LPAREN RESULT RPAREN LPAREN VALTYPE
##
## Ends in an error in state: 179.
##
## foldedinstr -> LPAREN . plaininstr list(foldedinstr) RPAREN [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . IF label blocktype(foldedinstrs(__anonymous_1)) option(__anonymous_2) RPAREN [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . BLOCK label blocktype(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . LOOP label blocktype(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## results(instrs(RPAREN)) -> LPAREN . RESULT list(valtype) RPAREN results(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET EOF END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LOCAL_TEE VALTYPE
##
## Ends in an error in state: 180.
##
## plaininstr -> LOCAL_TEE . idx [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LOCAL_TEE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LOCAL_SET VALTYPE
##
## Ends in an error in state: 182.
##
## plaininstr -> LOCAL_SET . idx [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LOCAL_SET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LOCAL_GET VALTYPE
##
## Ends in an error in state: 184.
##
## plaininstr -> LOCAL_GET . idx [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LOCAL_GET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN IF VALTYPE
##
## Ends in an error in state: 186.
##
## foldedinstr -> LPAREN IF . label blocktype(foldedinstrs(__anonymous_1)) option(__anonymous_2) RPAREN [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN IF
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN IF ID VALTYPE
##
## Ends in an error in state: 187.
##
## foldedinstr -> LPAREN IF label . blocktype(foldedinstrs(__anonymous_1)) option(__anonymous_2) RPAREN [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN IF label
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN IF LPAREN VALTYPE
##
## Ends in an error in state: 188.
##
## foldedinstr -> LPAREN . plaininstr list(foldedinstr) RPAREN [ LPAREN ]
## foldedinstr -> LPAREN . IF label blocktype(foldedinstrs(__anonymous_1)) option(__anonymous_2) RPAREN [ LPAREN ]
## foldedinstr -> LPAREN . BLOCK label blocktype(instrs(RPAREN)) [ LPAREN ]
## foldedinstr -> LPAREN . LOOP label blocktype(instrs(RPAREN)) [ LPAREN ]
## foldedinstrs(__anonymous_1) -> LPAREN . THEN instrs(RPAREN) [ RPAREN LPAREN ]
## params(results(foldedinstrs(__anonymous_1))) -> LPAREN . PARAM ID valtype RPAREN params(results(foldedinstrs(__anonymous_1))) [ RPAREN LPAREN ]
## params(results(foldedinstrs(__anonymous_1))) -> LPAREN . PARAM list(valtype) RPAREN params(results(foldedinstrs(__anonymous_1))) [ RPAREN LPAREN ]
## results(foldedinstrs(__anonymous_1)) -> LPAREN . RESULT list(valtype) RPAREN results(foldedinstrs(__anonymous_1)) [ RPAREN LPAREN ]
## typeuse(foldedinstrs(__anonymous_1)) -> LPAREN . TYPE idx RPAREN params_and_results(foldedinstrs(__anonymous_1)) [ RPAREN LPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN IF LPAREN TYPE VALTYPE
##
## Ends in an error in state: 189.
##
## typeuse(foldedinstrs(__anonymous_1)) -> LPAREN TYPE . idx RPAREN params_and_results(foldedinstrs(__anonymous_1)) [ RPAREN LPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN IF LPAREN TYPE NAT VALTYPE
##
## Ends in an error in state: 190.
##
## typeuse(foldedinstrs(__anonymous_1)) -> LPAREN TYPE idx . RPAREN params_and_results(foldedinstrs(__anonymous_1)) [ RPAREN LPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN TYPE idx
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN IF LPAREN TYPE NAT RPAREN VALTYPE
##
## Ends in an error in state: 191.
##
## typeuse(foldedinstrs(__anonymous_1)) -> LPAREN TYPE idx RPAREN . params_and_results(foldedinstrs(__anonymous_1)) [ RPAREN LPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN TYPE idx RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN IF LPAREN PARAM RPAREN LPAREN VALTYPE
##
## Ends in an error in state: 192.
##
## foldedinstr -> LPAREN . plaininstr list(foldedinstr) RPAREN [ LPAREN ]
## foldedinstr -> LPAREN . IF label blocktype(foldedinstrs(__anonymous_1)) option(__anonymous_2) RPAREN [ LPAREN ]
## foldedinstr -> LPAREN . BLOCK label blocktype(instrs(RPAREN)) [ LPAREN ]
## foldedinstr -> LPAREN . LOOP label blocktype(instrs(RPAREN)) [ LPAREN ]
## foldedinstrs(__anonymous_1) -> LPAREN . THEN instrs(RPAREN) [ RPAREN LPAREN ]
## params(results(foldedinstrs(__anonymous_1))) -> LPAREN . PARAM ID valtype RPAREN params(results(foldedinstrs(__anonymous_1))) [ RPAREN LPAREN ]
## params(results(foldedinstrs(__anonymous_1))) -> LPAREN . PARAM list(valtype) RPAREN params(results(foldedinstrs(__anonymous_1))) [ RPAREN LPAREN ]
## results(foldedinstrs(__anonymous_1)) -> LPAREN . RESULT list(valtype) RPAREN results(foldedinstrs(__anonymous_1)) [ RPAREN LPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN IF LPAREN THEN VALTYPE
##
## Ends in an error in state: 193.
##
## foldedinstrs(__anonymous_1) -> LPAREN THEN . instrs(RPAREN) [ RPAREN LPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN THEN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN DATA LPAREN LPAREN VALTYPE
##
## Ends in an error in state: 194.
##
## foldedinstr -> LPAREN . plaininstr list(foldedinstr) RPAREN [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . IF label blocktype(foldedinstrs(__anonymous_1)) option(__anonymous_2) RPAREN [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . BLOCK label blocktype(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . LOOP label blocktype(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC GLOBAL_SET VALTYPE
##
## Ends in an error in state: 219.
##
## plaininstr -> GLOBAL_SET . idx [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## GLOBAL_SET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC GLOBAL_GET VALTYPE
##
## Ends in an error in state: 221.
##
## plaininstr -> GLOBAL_GET . idx [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## GLOBAL_GET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC CALL_REF VALTYPE
##
## Ends in an error in state: 223.
##
## plaininstr -> CALL_REF . idx [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## CALL_REF
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC CALL VALTYPE
##
## Ends in an error in state: 225.
##
## plaininstr -> CALL . idx [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## CALL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN BLOCK VALTYPE
##
## Ends in an error in state: 227.
##
## foldedinstr -> LPAREN BLOCK . label blocktype(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN BLOCK
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN BLOCK ID VALTYPE
##
## Ends in an error in state: 228.
##
## foldedinstr -> LPAREN BLOCK label . blocktype(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN BLOCK label
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LOOP VALTYPE
##
## Ends in an error in state: 229.
##
## blockinstr -> LOOP . label blocktype(instrs(END)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LOOP
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LOOP ID VALTYPE
##
## Ends in an error in state: 230.
##
## blockinstr -> LOOP label . blocktype(instrs(END)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LOOP label
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC BLOCK RETURN_CALL_INDIRECT VALTYPE
##
## Ends in an error in state: 231.
##
## callindirect(instrs(END)) -> RETURN_CALL_INDIRECT . idx typeuse(instrs(END)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## callindirect(instrs(END)) -> RETURN_CALL_INDIRECT . typeuse(instrs(END)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## RETURN_CALL_INDIRECT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC BLOCK LPAREN VALTYPE
##
## Ends in an error in state: 232.
##
## foldedinstr -> LPAREN . plaininstr list(foldedinstr) RPAREN [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . IF label blocktype(foldedinstrs(__anonymous_1)) option(__anonymous_2) RPAREN [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . BLOCK label blocktype(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . LOOP label blocktype(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## params(results(instrs(END))) -> LPAREN . PARAM ID valtype RPAREN params(results(instrs(END))) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## params(results(instrs(END))) -> LPAREN . PARAM list(valtype) RPAREN params(results(instrs(END))) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## results(instrs(END)) -> LPAREN . RESULT list(valtype) RPAREN results(instrs(END)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## typeuse(instrs(END)) -> LPAREN . TYPE idx RPAREN params_and_results(instrs(END)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC BLOCK LPAREN TYPE VALTYPE
##
## Ends in an error in state: 233.
##
## typeuse(instrs(END)) -> LPAREN TYPE . idx RPAREN params_and_results(instrs(END)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC BLOCK LPAREN TYPE NAT VALTYPE
##
## Ends in an error in state: 234.
##
## typeuse(instrs(END)) -> LPAREN TYPE idx . RPAREN params_and_results(instrs(END)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN TYPE idx
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC BLOCK LPAREN TYPE NAT RPAREN VALTYPE
##
## Ends in an error in state: 235.
##
## typeuse(instrs(END)) -> LPAREN TYPE idx RPAREN . params_and_results(instrs(END)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN TYPE idx RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC BLOCK LPAREN PARAM RPAREN LPAREN VALTYPE
##
## Ends in an error in state: 236.
##
## foldedinstr -> LPAREN . plaininstr list(foldedinstr) RPAREN [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . IF label blocktype(foldedinstrs(__anonymous_1)) option(__anonymous_2) RPAREN [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . BLOCK label blocktype(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . LOOP label blocktype(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## params(results(instrs(END))) -> LPAREN . PARAM ID valtype RPAREN params(results(instrs(END))) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## params(results(instrs(END))) -> LPAREN . PARAM list(valtype) RPAREN params(results(instrs(END))) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## results(instrs(END)) -> LPAREN . RESULT list(valtype) RPAREN results(instrs(END)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC BLOCK LPAREN RESULT TYPE
##
## Ends in an error in state: 237.
##
## results(instrs(END)) -> LPAREN RESULT . list(valtype) RPAREN results(instrs(END)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN RESULT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC BLOCK LPAREN RESULT RPAREN VALTYPE
##
## Ends in an error in state: 239.
##
## results(instrs(END)) -> LPAREN RESULT list(valtype) RPAREN . results(instrs(END)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN RESULT list(valtype) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC BLOCK LPAREN RESULT RPAREN LPAREN VALTYPE
##
## Ends in an error in state: 240.
##
## foldedinstr -> LPAREN . plaininstr list(foldedinstr) RPAREN [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . IF label blocktype(foldedinstrs(__anonymous_1)) option(__anonymous_2) RPAREN [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . BLOCK label blocktype(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . LOOP label blocktype(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## results(instrs(END)) -> LPAREN . RESULT list(valtype) RPAREN results(instrs(END)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC ARRAY_NEW_ELEM VALTYPE
##
## Ends in an error in state: 244.
##
## plaininstr -> ARRAY_NEW_ELEM . idx idx [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## ARRAY_NEW_ELEM
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC ARRAY_NEW_ELEM NAT VALTYPE
##
## Ends in an error in state: 245.
##
## plaininstr -> ARRAY_NEW_ELEM idx . idx [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## ARRAY_NEW_ELEM idx
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC ARRAY_NEW_DEFAULT VALTYPE
##
## Ends in an error in state: 247.
##
## plaininstr -> ARRAY_NEW_DEFAULT . idx [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## ARRAY_NEW_DEFAULT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC ARRAY_NEW_DATA VALTYPE
##
## Ends in an error in state: 249.
##
## plaininstr -> ARRAY_NEW_DATA . idx idx [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## ARRAY_NEW_DATA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC ARRAY_NEW_DATA NAT VALTYPE
##
## Ends in an error in state: 250.
##
## plaininstr -> ARRAY_NEW_DATA idx . idx [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## ARRAY_NEW_DATA idx
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC ARRAY_NEW VALTYPE
##
## Ends in an error in state: 252.
##
## plaininstr -> ARRAY_NEW . idx [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## ARRAY_NEW
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN I31_GET VALTYPE
##
## Ends in an error in state: 254.
##
## foldedinstr -> LPAREN plaininstr . list(foldedinstr) RPAREN [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN plaininstr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN I31_GET LPAREN LOOP RPAREN VALTYPE
##
## Ends in an error in state: 257.
##
## list(foldedinstr) -> foldedinstr . list(foldedinstr) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## foldedinstr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC IF VALTYPE
##
## Ends in an error in state: 259.
##
## blockinstr -> IF . label blocktype(instrs(ELSE)) label instrs(END) label [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## blockinstr -> IF . label blocktype(instrs(END)) label [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## IF
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC IF ID VALTYPE
##
## Ends in an error in state: 260.
##
## blockinstr -> IF label . blocktype(instrs(ELSE)) label instrs(END) label [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## blockinstr -> IF label . blocktype(instrs(END)) label [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## IF label
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC IF RETURN_CALL_INDIRECT VALTYPE
##
## Ends in an error in state: 261.
##
## callindirect(instrs(ELSE)) -> RETURN_CALL_INDIRECT . idx typeuse(instrs(ELSE)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## callindirect(instrs(ELSE)) -> RETURN_CALL_INDIRECT . typeuse(instrs(ELSE)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## callindirect(instrs(END)) -> RETURN_CALL_INDIRECT . idx typeuse(instrs(END)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## callindirect(instrs(END)) -> RETURN_CALL_INDIRECT . typeuse(instrs(END)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## RETURN_CALL_INDIRECT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC IF LPAREN VALTYPE
##
## Ends in an error in state: 262.
##
## foldedinstr -> LPAREN . plaininstr list(foldedinstr) RPAREN [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . IF label blocktype(foldedinstrs(__anonymous_1)) option(__anonymous_2) RPAREN [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . BLOCK label blocktype(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . LOOP label blocktype(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## params(results(instrs(ELSE))) -> LPAREN . PARAM ID valtype RPAREN params(results(instrs(ELSE))) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## params(results(instrs(ELSE))) -> LPAREN . PARAM list(valtype) RPAREN params(results(instrs(ELSE))) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## params(results(instrs(END))) -> LPAREN . PARAM ID valtype RPAREN params(results(instrs(END))) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## params(results(instrs(END))) -> LPAREN . PARAM list(valtype) RPAREN params(results(instrs(END))) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## results(instrs(ELSE)) -> LPAREN . RESULT list(valtype) RPAREN results(instrs(ELSE)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## results(instrs(END)) -> LPAREN . RESULT list(valtype) RPAREN results(instrs(END)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## typeuse(instrs(ELSE)) -> LPAREN . TYPE idx RPAREN params_and_results(instrs(ELSE)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## typeuse(instrs(END)) -> LPAREN . TYPE idx RPAREN params_and_results(instrs(END)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC IF LPAREN TYPE VALTYPE
##
## Ends in an error in state: 263.
##
## typeuse(instrs(ELSE)) -> LPAREN TYPE . idx RPAREN params_and_results(instrs(ELSE)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## typeuse(instrs(END)) -> LPAREN TYPE . idx RPAREN params_and_results(instrs(END)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC IF LPAREN TYPE NAT VALTYPE
##
## Ends in an error in state: 264.
##
## typeuse(instrs(ELSE)) -> LPAREN TYPE idx . RPAREN params_and_results(instrs(ELSE)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## typeuse(instrs(END)) -> LPAREN TYPE idx . RPAREN params_and_results(instrs(END)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN TYPE idx
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC IF LPAREN TYPE NAT RPAREN VALTYPE
##
## Ends in an error in state: 265.
##
## typeuse(instrs(ELSE)) -> LPAREN TYPE idx RPAREN . params_and_results(instrs(ELSE)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## typeuse(instrs(END)) -> LPAREN TYPE idx RPAREN . params_and_results(instrs(END)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN TYPE idx RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC IF LPAREN PARAM RPAREN LPAREN VALTYPE
##
## Ends in an error in state: 266.
##
## foldedinstr -> LPAREN . plaininstr list(foldedinstr) RPAREN [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . IF label blocktype(foldedinstrs(__anonymous_1)) option(__anonymous_2) RPAREN [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . BLOCK label blocktype(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . LOOP label blocktype(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## params(results(instrs(ELSE))) -> LPAREN . PARAM ID valtype RPAREN params(results(instrs(ELSE))) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## params(results(instrs(ELSE))) -> LPAREN . PARAM list(valtype) RPAREN params(results(instrs(ELSE))) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## params(results(instrs(END))) -> LPAREN . PARAM ID valtype RPAREN params(results(instrs(END))) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## params(results(instrs(END))) -> LPAREN . PARAM list(valtype) RPAREN params(results(instrs(END))) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## results(instrs(ELSE)) -> LPAREN . RESULT list(valtype) RPAREN results(instrs(ELSE)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## results(instrs(END)) -> LPAREN . RESULT list(valtype) RPAREN results(instrs(END)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC IF LPAREN RESULT TYPE
##
## Ends in an error in state: 267.
##
## results(instrs(ELSE)) -> LPAREN RESULT . list(valtype) RPAREN results(instrs(ELSE)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## results(instrs(END)) -> LPAREN RESULT . list(valtype) RPAREN results(instrs(END)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN RESULT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC IF LPAREN RESULT RPAREN VALTYPE
##
## Ends in an error in state: 269.
##
## results(instrs(ELSE)) -> LPAREN RESULT list(valtype) RPAREN . results(instrs(ELSE)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## results(instrs(END)) -> LPAREN RESULT list(valtype) RPAREN . results(instrs(END)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN RESULT list(valtype) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC IF LPAREN RESULT RPAREN LPAREN VALTYPE
##
## Ends in an error in state: 270.
##
## foldedinstr -> LPAREN . plaininstr list(foldedinstr) RPAREN [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . IF label blocktype(foldedinstrs(__anonymous_1)) option(__anonymous_2) RPAREN [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . BLOCK label blocktype(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . LOOP label blocktype(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## results(instrs(ELSE)) -> LPAREN . RESULT list(valtype) RPAREN results(instrs(ELSE)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## results(instrs(END)) -> LPAREN . RESULT list(valtype) RPAREN results(instrs(END)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC IF CALL_INDIRECT VALTYPE
##
## Ends in an error in state: 273.
##
## callindirect(instrs(ELSE)) -> CALL_INDIRECT . idx typeuse(instrs(ELSE)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## callindirect(instrs(ELSE)) -> CALL_INDIRECT . typeuse(instrs(ELSE)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## callindirect(instrs(END)) -> CALL_INDIRECT . idx typeuse(instrs(END)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## callindirect(instrs(END)) -> CALL_INDIRECT . typeuse(instrs(END)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## CALL_INDIRECT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC BLOCK VALTYPE
##
## Ends in an error in state: 274.
##
## blockinstr -> BLOCK . label blocktype(instrs(END)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## BLOCK
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC BLOCK ID VALTYPE
##
## Ends in an error in state: 275.
##
## blockinstr -> BLOCK label . blocktype(instrs(END)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## BLOCK label
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC BLOCK CALL_INDIRECT VALTYPE
##
## Ends in an error in state: 276.
##
## callindirect(instrs(END)) -> CALL_INDIRECT . idx typeuse(instrs(END)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## callindirect(instrs(END)) -> CALL_INDIRECT . typeuse(instrs(END)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## CALL_INDIRECT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC BLOCK I31_GET VALTYPE
##
## Ends in an error in state: 279.
##
## instrs(END) -> plaininstr . instrs(END) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## plaininstr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC BLOCK LPAREN LOOP RPAREN VALTYPE
##
## Ends in an error in state: 281.
##
## instrs(END) -> foldedinstr . instrs(END) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## foldedinstr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC BLOCK LOOP END VALTYPE
##
## Ends in an error in state: 284.
##
## instrs(END) -> blockinstr . instrs(END) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## blockinstr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC BLOCK CALL_INDIRECT NAT VALTYPE
##
## Ends in an error in state: 289.
##
## callindirect(instrs(END)) -> CALL_INDIRECT idx . typeuse(instrs(END)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## CALL_INDIRECT idx
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC IF I31_GET VALTYPE
##
## Ends in an error in state: 295.
##
## instrs(ELSE) -> plaininstr . instrs(ELSE) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## instrs(END) -> plaininstr . instrs(END) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## plaininstr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC IF LPAREN LOOP RPAREN VALTYPE
##
## Ends in an error in state: 297.
##
## instrs(ELSE) -> foldedinstr . instrs(ELSE) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## instrs(END) -> foldedinstr . instrs(END) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## foldedinstr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC IF LOOP END VALTYPE
##
## Ends in an error in state: 300.
##
## instrs(ELSE) -> blockinstr . instrs(ELSE) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## instrs(END) -> blockinstr . instrs(END) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## blockinstr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC IF CALL_INDIRECT NAT VALTYPE
##
## Ends in an error in state: 305.
##
## callindirect(instrs(ELSE)) -> CALL_INDIRECT idx . typeuse(instrs(ELSE)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## callindirect(instrs(END)) -> CALL_INDIRECT idx . typeuse(instrs(END)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## CALL_INDIRECT idx
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC IF LPAREN PARAM TYPE
##
## Ends in an error in state: 309.
##
## params(results(instrs(ELSE))) -> LPAREN PARAM . ID valtype RPAREN params(results(instrs(ELSE))) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## params(results(instrs(ELSE))) -> LPAREN PARAM . list(valtype) RPAREN params(results(instrs(ELSE))) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## params(results(instrs(END))) -> LPAREN PARAM . ID valtype RPAREN params(results(instrs(END))) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## params(results(instrs(END))) -> LPAREN PARAM . list(valtype) RPAREN params(results(instrs(END))) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN PARAM
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC IF LPAREN PARAM ID TYPE
##
## Ends in an error in state: 310.
##
## params(results(instrs(ELSE))) -> LPAREN PARAM ID . valtype RPAREN params(results(instrs(ELSE))) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## params(results(instrs(END))) -> LPAREN PARAM ID . valtype RPAREN params(results(instrs(END))) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN PARAM ID
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC IF LPAREN PARAM ID VALTYPE VALTYPE
##
## Ends in an error in state: 311.
##
## params(results(instrs(ELSE))) -> LPAREN PARAM ID valtype . RPAREN params(results(instrs(ELSE))) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## params(results(instrs(END))) -> LPAREN PARAM ID valtype . RPAREN params(results(instrs(END))) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN PARAM ID valtype
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC IF LPAREN PARAM ID VALTYPE RPAREN VALTYPE
##
## Ends in an error in state: 312.
##
## params(results(instrs(ELSE))) -> LPAREN PARAM ID valtype RPAREN . params(results(instrs(ELSE))) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## params(results(instrs(END))) -> LPAREN PARAM ID valtype RPAREN . params(results(instrs(END))) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN PARAM ID valtype RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC IF LPAREN PARAM RPAREN VALTYPE
##
## Ends in an error in state: 316.
##
## params(results(instrs(ELSE))) -> LPAREN PARAM list(valtype) RPAREN . params(results(instrs(ELSE))) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## params(results(instrs(END))) -> LPAREN PARAM list(valtype) RPAREN . params(results(instrs(END))) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN PARAM list(valtype) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC IF RETURN_CALL_INDIRECT NAT VALTYPE
##
## Ends in an error in state: 323.
##
## callindirect(instrs(ELSE)) -> RETURN_CALL_INDIRECT idx . typeuse(instrs(ELSE)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## callindirect(instrs(END)) -> RETURN_CALL_INDIRECT idx . typeuse(instrs(END)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## RETURN_CALL_INDIRECT idx
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC IF END VALTYPE
##
## Ends in an error in state: 327.
##
## blockinstr -> IF label blocktype(instrs(END)) . label [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## IF label blocktype(instrs(END))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC IF ELSE VALTYPE
##
## Ends in an error in state: 329.
##
## blockinstr -> IF label blocktype(instrs(ELSE)) . label instrs(END) label [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## IF label blocktype(instrs(ELSE))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC IF ELSE ID VALTYPE
##
## Ends in an error in state: 330.
##
## blockinstr -> IF label blocktype(instrs(ELSE)) label . instrs(END) label [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## IF label blocktype(instrs(ELSE)) label
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC IF ELSE END VALTYPE
##
## Ends in an error in state: 331.
##
## blockinstr -> IF label blocktype(instrs(ELSE)) label instrs(END) . label [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## IF label blocktype(instrs(ELSE)) label instrs(END)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC BLOCK LPAREN PARAM TYPE
##
## Ends in an error in state: 333.
##
## params(results(instrs(END))) -> LPAREN PARAM . ID valtype RPAREN params(results(instrs(END))) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## params(results(instrs(END))) -> LPAREN PARAM . list(valtype) RPAREN params(results(instrs(END))) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN PARAM
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC BLOCK LPAREN PARAM ID TYPE
##
## Ends in an error in state: 334.
##
## params(results(instrs(END))) -> LPAREN PARAM ID . valtype RPAREN params(results(instrs(END))) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN PARAM ID
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC BLOCK LPAREN PARAM ID VALTYPE VALTYPE
##
## Ends in an error in state: 335.
##
## params(results(instrs(END))) -> LPAREN PARAM ID valtype . RPAREN params(results(instrs(END))) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN PARAM ID valtype
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC BLOCK LPAREN PARAM ID VALTYPE RPAREN VALTYPE
##
## Ends in an error in state: 336.
##
## params(results(instrs(END))) -> LPAREN PARAM ID valtype RPAREN . params(results(instrs(END))) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN PARAM ID valtype RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC BLOCK LPAREN PARAM RPAREN VALTYPE
##
## Ends in an error in state: 338.
##
## params(results(instrs(END))) -> LPAREN PARAM list(valtype) RPAREN . params(results(instrs(END))) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN PARAM list(valtype) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC BLOCK RETURN_CALL_INDIRECT NAT VALTYPE
##
## Ends in an error in state: 339.
##
## callindirect(instrs(END)) -> RETURN_CALL_INDIRECT idx . typeuse(instrs(END)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF ID I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## RETURN_CALL_INDIRECT idx
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC CALL_INDIRECT VALTYPE
##
## Ends in an error in state: 341.
##
## callindirect(instrs(RPAREN)) -> CALL_INDIRECT . idx typeuse(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET EOF END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## callindirect(instrs(RPAREN)) -> CALL_INDIRECT . typeuse(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET EOF END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## CALL_INDIRECT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC I31_GET VALTYPE
##
## Ends in an error in state: 344.
##
## instrs(RPAREN) -> plaininstr . instrs(RPAREN) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET EOF END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## plaininstr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN LOOP RPAREN VALTYPE
##
## Ends in an error in state: 346.
##
## instrs(RPAREN) -> foldedinstr . instrs(RPAREN) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET EOF END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## foldedinstr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LOOP END VALTYPE
##
## Ends in an error in state: 349.
##
## instrs(RPAREN) -> blockinstr . instrs(RPAREN) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET EOF END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## blockinstr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC CALL_INDIRECT NAT VALTYPE
##
## Ends in an error in state: 354.
##
## callindirect(instrs(RPAREN)) -> CALL_INDIRECT idx . typeuse(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET EOF END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## CALL_INDIRECT idx
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN IF LPAREN RESULT TYPE
##
## Ends in an error in state: 359.
##
## results(foldedinstrs(__anonymous_1)) -> LPAREN RESULT . list(valtype) RPAREN results(foldedinstrs(__anonymous_1)) [ RPAREN LPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN RESULT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN IF LPAREN RESULT RPAREN VALTYPE
##
## Ends in an error in state: 361.
##
## results(foldedinstrs(__anonymous_1)) -> LPAREN RESULT list(valtype) RPAREN . results(foldedinstrs(__anonymous_1)) [ RPAREN LPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN RESULT list(valtype) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN IF LPAREN RESULT RPAREN LPAREN VALTYPE
##
## Ends in an error in state: 362.
##
## foldedinstr -> LPAREN . plaininstr list(foldedinstr) RPAREN [ LPAREN ]
## foldedinstr -> LPAREN . IF label blocktype(foldedinstrs(__anonymous_1)) option(__anonymous_2) RPAREN [ LPAREN ]
## foldedinstr -> LPAREN . BLOCK label blocktype(instrs(RPAREN)) [ LPAREN ]
## foldedinstr -> LPAREN . LOOP label blocktype(instrs(RPAREN)) [ LPAREN ]
## foldedinstrs(__anonymous_1) -> LPAREN . THEN instrs(RPAREN) [ RPAREN LPAREN ]
## results(foldedinstrs(__anonymous_1)) -> LPAREN . RESULT list(valtype) RPAREN results(foldedinstrs(__anonymous_1)) [ RPAREN LPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN IF LPAREN LOOP RPAREN VALTYPE
##
## Ends in an error in state: 365.
##
## foldedinstrs(__anonymous_1) -> foldedinstr . foldedinstrs(__anonymous_1) [ RPAREN LPAREN ]
##
## The known suffix of the stack is as follows:
## foldedinstr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN IF LPAREN LOOP RPAREN LPAREN VALTYPE
##
## Ends in an error in state: 366.
##
## foldedinstr -> LPAREN . plaininstr list(foldedinstr) RPAREN [ LPAREN ]
## foldedinstr -> LPAREN . IF label blocktype(foldedinstrs(__anonymous_1)) option(__anonymous_2) RPAREN [ LPAREN ]
## foldedinstr -> LPAREN . BLOCK label blocktype(instrs(RPAREN)) [ LPAREN ]
## foldedinstr -> LPAREN . LOOP label blocktype(instrs(RPAREN)) [ LPAREN ]
## foldedinstrs(__anonymous_1) -> LPAREN . THEN instrs(RPAREN) [ RPAREN LPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN IF LPAREN PARAM TYPE
##
## Ends in an error in state: 368.
##
## params(results(foldedinstrs(__anonymous_1))) -> LPAREN PARAM . ID valtype RPAREN params(results(foldedinstrs(__anonymous_1))) [ RPAREN LPAREN ]
## params(results(foldedinstrs(__anonymous_1))) -> LPAREN PARAM . list(valtype) RPAREN params(results(foldedinstrs(__anonymous_1))) [ RPAREN LPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN PARAM
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN IF LPAREN PARAM ID TYPE
##
## Ends in an error in state: 369.
##
## params(results(foldedinstrs(__anonymous_1))) -> LPAREN PARAM ID . valtype RPAREN params(results(foldedinstrs(__anonymous_1))) [ RPAREN LPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN PARAM ID
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN IF LPAREN PARAM ID VALTYPE VALTYPE
##
## Ends in an error in state: 370.
##
## params(results(foldedinstrs(__anonymous_1))) -> LPAREN PARAM ID valtype . RPAREN params(results(foldedinstrs(__anonymous_1))) [ RPAREN LPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN PARAM ID valtype
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN IF LPAREN PARAM ID VALTYPE RPAREN VALTYPE
##
## Ends in an error in state: 371.
##
## params(results(foldedinstrs(__anonymous_1))) -> LPAREN PARAM ID valtype RPAREN . params(results(foldedinstrs(__anonymous_1))) [ RPAREN LPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN PARAM ID valtype RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN IF LPAREN PARAM RPAREN VALTYPE
##
## Ends in an error in state: 375.
##
## params(results(foldedinstrs(__anonymous_1))) -> LPAREN PARAM list(valtype) RPAREN . params(results(foldedinstrs(__anonymous_1))) [ RPAREN LPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN PARAM list(valtype) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN IF LPAREN THEN RPAREN VALTYPE
##
## Ends in an error in state: 381.
##
## foldedinstr -> LPAREN IF label blocktype(foldedinstrs(__anonymous_1)) . option(__anonymous_2) RPAREN [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN IF label blocktype(foldedinstrs(__anonymous_1))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN IF LPAREN THEN RPAREN LPAREN VALTYPE
##
## Ends in an error in state: 382.
##
## option(__anonymous_2) -> LPAREN . ELSE instrs(RPAREN) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN IF LPAREN THEN RPAREN LPAREN ELSE VALTYPE
##
## Ends in an error in state: 383.
##
## option(__anonymous_2) -> LPAREN ELSE . instrs(RPAREN) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN ELSE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN IF LPAREN THEN RPAREN LPAREN ELSE RPAREN VALTYPE
##
## Ends in an error in state: 385.
##
## foldedinstr -> LPAREN IF label blocktype(foldedinstrs(__anonymous_1)) option(__anonymous_2) . RPAREN [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN IF label blocktype(foldedinstrs(__anonymous_1)) option(__anonymous_2)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC CALL_INDIRECT LPAREN PARAM TYPE
##
## Ends in an error in state: 388.
##
## params(results(instrs(RPAREN))) -> LPAREN PARAM . ID valtype RPAREN params(results(instrs(RPAREN))) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET EOF END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## params(results(instrs(RPAREN))) -> LPAREN PARAM . list(valtype) RPAREN params(results(instrs(RPAREN))) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET EOF END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN PARAM
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC CALL_INDIRECT LPAREN PARAM ID TYPE
##
## Ends in an error in state: 389.
##
## params(results(instrs(RPAREN))) -> LPAREN PARAM ID . valtype RPAREN params(results(instrs(RPAREN))) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET EOF END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN PARAM ID
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC CALL_INDIRECT LPAREN PARAM ID VALTYPE VALTYPE
##
## Ends in an error in state: 390.
##
## params(results(instrs(RPAREN))) -> LPAREN PARAM ID valtype . RPAREN params(results(instrs(RPAREN))) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET EOF END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN PARAM ID valtype
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC CALL_INDIRECT LPAREN PARAM ID VALTYPE RPAREN VALTYPE
##
## Ends in an error in state: 391.
##
## params(results(instrs(RPAREN))) -> LPAREN PARAM ID valtype RPAREN . params(results(instrs(RPAREN))) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET EOF END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN PARAM ID valtype RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC CALL_INDIRECT LPAREN PARAM RPAREN VALTYPE
##
## Ends in an error in state: 394.
##
## params(results(instrs(RPAREN))) -> LPAREN PARAM list(valtype) RPAREN . params(results(instrs(RPAREN))) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET EOF END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## LPAREN PARAM list(valtype) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC RETURN_CALL_INDIRECT NAT VALTYPE
##
## Ends in an error in state: 398.
##
## callindirect(instrs(RPAREN)) -> RETURN_CALL_INDIRECT idx . typeuse(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET EOF END ELSE CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
##
## The known suffix of the stack is as follows:
## RETURN_CALL_INDIRECT idx
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN GLOBAL VALTYPE CALL_INDIRECT VALTYPE
##
## Ends in an error in state: 401.
##
## callindirect(instrs(__anonymous_3)) -> CALL_INDIRECT . idx typeuse(instrs(__anonymous_3)) [ RPAREN ]
## callindirect(instrs(__anonymous_3)) -> CALL_INDIRECT . typeuse(instrs(__anonymous_3)) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## CALL_INDIRECT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN GLOBAL VALTYPE LPAREN LOOP RPAREN VALTYPE
##
## Ends in an error in state: 406.
##
## instrs(__anonymous_3) -> foldedinstr . instrs(__anonymous_3) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## foldedinstr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN GLOBAL VALTYPE LOOP END VALTYPE
##
## Ends in an error in state: 409.
##
## instrs(__anonymous_3) -> blockinstr . instrs(__anonymous_3) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## blockinstr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN GLOBAL VALTYPE CALL_INDIRECT NAT VALTYPE
##
## Ends in an error in state: 414.
##
## callindirect(instrs(__anonymous_3)) -> CALL_INDIRECT idx . typeuse(instrs(__anonymous_3)) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## CALL_INDIRECT idx
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN GLOBAL VALTYPE CALL_INDIRECT LPAREN PARAM TYPE
##
## Ends in an error in state: 417.
##
## params(results(instrs(__anonymous_3))) -> LPAREN PARAM . ID valtype RPAREN params(results(instrs(__anonymous_3))) [ RPAREN ]
## params(results(instrs(__anonymous_3))) -> LPAREN PARAM . list(valtype) RPAREN params(results(instrs(__anonymous_3))) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN PARAM
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN GLOBAL VALTYPE CALL_INDIRECT LPAREN PARAM ID TYPE
##
## Ends in an error in state: 418.
##
## params(results(instrs(__anonymous_3))) -> LPAREN PARAM ID . valtype RPAREN params(results(instrs(__anonymous_3))) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN PARAM ID
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN GLOBAL VALTYPE CALL_INDIRECT LPAREN PARAM ID VALTYPE VALTYPE
##
## Ends in an error in state: 419.
##
## params(results(instrs(__anonymous_3))) -> LPAREN PARAM ID valtype . RPAREN params(results(instrs(__anonymous_3))) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN PARAM ID valtype
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN GLOBAL VALTYPE CALL_INDIRECT LPAREN PARAM ID VALTYPE RPAREN VALTYPE
##
## Ends in an error in state: 420.
##
## params(results(instrs(__anonymous_3))) -> LPAREN PARAM ID valtype RPAREN . params(results(instrs(__anonymous_3))) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN PARAM ID valtype RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN GLOBAL VALTYPE CALL_INDIRECT LPAREN PARAM RPAREN VALTYPE
##
## Ends in an error in state: 423.
##
## params(results(instrs(__anonymous_3))) -> LPAREN PARAM list(valtype) RPAREN . params(results(instrs(__anonymous_3))) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN PARAM list(valtype) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN GLOBAL VALTYPE RETURN_CALL_INDIRECT NAT VALTYPE
##
## Ends in an error in state: 427.
##
## callindirect(instrs(__anonymous_3)) -> RETURN_CALL_INDIRECT idx . typeuse(instrs(__anonymous_3)) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## RETURN_CALL_INDIRECT idx
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC VALTYPE
##
## Ends in an error in state: 434.
##
## func -> LPAREN FUNC . option(ID) exports(typeuse(locals(instrs(RPAREN)))) [ RPAREN LPAREN EOF ]
## func -> LPAREN FUNC . option(ID) exports(__anonymous_4) typeuse(__anonymous_5) RPAREN [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN FUNC
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC ID VALTYPE
##
## Ends in an error in state: 435.
##
## func -> LPAREN FUNC option(ID) . exports(typeuse(locals(instrs(RPAREN)))) [ RPAREN LPAREN EOF ]
## func -> LPAREN FUNC option(ID) . exports(__anonymous_4) typeuse(__anonymous_5) RPAREN [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN FUNC option(ID)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN VALTYPE
##
## Ends in an error in state: 436.
##
## exports(__anonymous_4) -> LPAREN . IMPORT name name RPAREN [ RPAREN LPAREN ]
## exports(__anonymous_4) -> LPAREN . EXPORT name RPAREN exports(__anonymous_4) [ RPAREN LPAREN ]
## exports(typeuse(locals(instrs(RPAREN)))) -> LPAREN . EXPORT name RPAREN exports(typeuse(locals(instrs(RPAREN)))) [ RPAREN LPAREN EOF ]
## foldedinstr -> LPAREN . plaininstr list(foldedinstr) RPAREN [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . IF label blocktype(foldedinstrs(__anonymous_1)) option(__anonymous_2) RPAREN [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . BLOCK label blocktype(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . LOOP label blocktype(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## locals(instrs(RPAREN)) -> LPAREN . LOCAL ID valtype RPAREN locals(instrs(RPAREN)) [ RPAREN LPAREN EOF ]
## locals(instrs(RPAREN)) -> LPAREN . LOCAL list(valtype) RPAREN locals(instrs(RPAREN)) [ RPAREN LPAREN EOF ]
## params(results(locals(instrs(RPAREN)))) -> LPAREN . PARAM ID valtype RPAREN params(results(locals(instrs(RPAREN)))) [ RPAREN LPAREN EOF ]
## params(results(locals(instrs(RPAREN)))) -> LPAREN . PARAM list(valtype) RPAREN params(results(locals(instrs(RPAREN)))) [ RPAREN LPAREN EOF ]
## results(locals(instrs(RPAREN))) -> LPAREN . RESULT list(valtype) RPAREN results(locals(instrs(RPAREN))) [ RPAREN LPAREN EOF ]
## typeuse(locals(instrs(RPAREN))) -> LPAREN . TYPE idx RPAREN params_and_results(locals(instrs(RPAREN))) [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN TYPE VALTYPE
##
## Ends in an error in state: 437.
##
## typeuse(locals(instrs(RPAREN))) -> LPAREN TYPE . idx RPAREN params_and_results(locals(instrs(RPAREN))) [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN TYPE NAT VALTYPE
##
## Ends in an error in state: 438.
##
## typeuse(locals(instrs(RPAREN))) -> LPAREN TYPE idx . RPAREN params_and_results(locals(instrs(RPAREN))) [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN TYPE idx
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN TYPE NAT RPAREN VALTYPE
##
## Ends in an error in state: 439.
##
## typeuse(locals(instrs(RPAREN))) -> LPAREN TYPE idx RPAREN . params_and_results(locals(instrs(RPAREN))) [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN TYPE idx RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN PARAM RPAREN LPAREN VALTYPE
##
## Ends in an error in state: 440.
##
## foldedinstr -> LPAREN . plaininstr list(foldedinstr) RPAREN [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . IF label blocktype(foldedinstrs(__anonymous_1)) option(__anonymous_2) RPAREN [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . BLOCK label blocktype(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . LOOP label blocktype(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## locals(instrs(RPAREN)) -> LPAREN . LOCAL ID valtype RPAREN locals(instrs(RPAREN)) [ RPAREN LPAREN EOF ]
## locals(instrs(RPAREN)) -> LPAREN . LOCAL list(valtype) RPAREN locals(instrs(RPAREN)) [ RPAREN LPAREN EOF ]
## params(results(locals(instrs(RPAREN)))) -> LPAREN . PARAM ID valtype RPAREN params(results(locals(instrs(RPAREN)))) [ RPAREN LPAREN EOF ]
## params(results(locals(instrs(RPAREN)))) -> LPAREN . PARAM list(valtype) RPAREN params(results(locals(instrs(RPAREN)))) [ RPAREN LPAREN EOF ]
## results(locals(instrs(RPAREN))) -> LPAREN . RESULT list(valtype) RPAREN results(locals(instrs(RPAREN))) [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN RESULT TYPE
##
## Ends in an error in state: 441.
##
## results(locals(instrs(RPAREN))) -> LPAREN RESULT . list(valtype) RPAREN results(locals(instrs(RPAREN))) [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN RESULT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN RESULT RPAREN VALTYPE
##
## Ends in an error in state: 443.
##
## results(locals(instrs(RPAREN))) -> LPAREN RESULT list(valtype) RPAREN . results(locals(instrs(RPAREN))) [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN RESULT list(valtype) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN RESULT RPAREN LPAREN VALTYPE
##
## Ends in an error in state: 444.
##
## foldedinstr -> LPAREN . plaininstr list(foldedinstr) RPAREN [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . IF label blocktype(foldedinstrs(__anonymous_1)) option(__anonymous_2) RPAREN [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . BLOCK label blocktype(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . LOOP label blocktype(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## locals(instrs(RPAREN)) -> LPAREN . LOCAL ID valtype RPAREN locals(instrs(RPAREN)) [ RPAREN LPAREN EOF ]
## locals(instrs(RPAREN)) -> LPAREN . LOCAL list(valtype) RPAREN locals(instrs(RPAREN)) [ RPAREN LPAREN EOF ]
## results(locals(instrs(RPAREN))) -> LPAREN . RESULT list(valtype) RPAREN results(locals(instrs(RPAREN))) [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN LOCAL TYPE
##
## Ends in an error in state: 445.
##
## locals(instrs(RPAREN)) -> LPAREN LOCAL . ID valtype RPAREN locals(instrs(RPAREN)) [ RPAREN LPAREN EOF ]
## locals(instrs(RPAREN)) -> LPAREN LOCAL . list(valtype) RPAREN locals(instrs(RPAREN)) [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN LOCAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN LOCAL ID TYPE
##
## Ends in an error in state: 446.
##
## locals(instrs(RPAREN)) -> LPAREN LOCAL ID . valtype RPAREN locals(instrs(RPAREN)) [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN LOCAL ID
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN LOCAL ID VALTYPE VALTYPE
##
## Ends in an error in state: 447.
##
## locals(instrs(RPAREN)) -> LPAREN LOCAL ID valtype . RPAREN locals(instrs(RPAREN)) [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN LOCAL ID valtype
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN LOCAL ID VALTYPE RPAREN VALTYPE
##
## Ends in an error in state: 448.
##
## locals(instrs(RPAREN)) -> LPAREN LOCAL ID valtype RPAREN . locals(instrs(RPAREN)) [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN LOCAL ID valtype RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN LOCAL RPAREN LPAREN VALTYPE
##
## Ends in an error in state: 449.
##
## foldedinstr -> LPAREN . plaininstr list(foldedinstr) RPAREN [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . IF label blocktype(foldedinstrs(__anonymous_1)) option(__anonymous_2) RPAREN [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . BLOCK label blocktype(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## foldedinstr -> LPAREN . LOOP label blocktype(instrs(RPAREN)) [ TUPLE_MAKE STRUCT_SET STRUCT_NEW_DEFAULT STRUCT_NEW STRUCT_GET RPAREN RETURN_CALL_REF RETURN_CALL_INDIRECT RETURN_CALL REF_TEST REF_NULL REF_I31 REF_FUNC REF_CAST LPAREN LOOP LOCAL_TEE LOCAL_SET LOCAL_GET IF I32_XOR I32_SUB I32_SHR I32_SHL I32_ROTR I32_ROTL I32_REM I32_OR I32_NE I32_MUL I32_LT I32_LE I32_GT I32_GE I32_EQZ I32_EQ I32_DIV I32_CONST I32_AND I32_ADD I31_GET GLOBAL_SET GLOBAL_GET CALL_REF CALL_INDIRECT CALL BLOCK ARRAY_NEW_FIXED ARRAY_NEW_ELEM ARRAY_NEW_DEFAULT ARRAY_NEW_DATA ARRAY_NEW ]
## locals(instrs(RPAREN)) -> LPAREN . LOCAL ID valtype RPAREN locals(instrs(RPAREN)) [ RPAREN LPAREN EOF ]
## locals(instrs(RPAREN)) -> LPAREN . LOCAL list(valtype) RPAREN locals(instrs(RPAREN)) [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN LOCAL RPAREN VALTYPE
##
## Ends in an error in state: 453.
##
## locals(instrs(RPAREN)) -> LPAREN LOCAL list(valtype) RPAREN . locals(instrs(RPAREN)) [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN LOCAL list(valtype) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN PARAM TYPE
##
## Ends in an error in state: 457.
##
## params(results(locals(instrs(RPAREN)))) -> LPAREN PARAM . ID valtype RPAREN params(results(locals(instrs(RPAREN)))) [ RPAREN LPAREN EOF ]
## params(results(locals(instrs(RPAREN)))) -> LPAREN PARAM . list(valtype) RPAREN params(results(locals(instrs(RPAREN)))) [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN PARAM
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN PARAM ID TYPE
##
## Ends in an error in state: 458.
##
## params(results(locals(instrs(RPAREN)))) -> LPAREN PARAM ID . valtype RPAREN params(results(locals(instrs(RPAREN)))) [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN PARAM ID
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN PARAM ID VALTYPE VALTYPE
##
## Ends in an error in state: 459.
##
## params(results(locals(instrs(RPAREN)))) -> LPAREN PARAM ID valtype . RPAREN params(results(locals(instrs(RPAREN)))) [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN PARAM ID valtype
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN PARAM ID VALTYPE RPAREN VALTYPE
##
## Ends in an error in state: 460.
##
## params(results(locals(instrs(RPAREN)))) -> LPAREN PARAM ID valtype RPAREN . params(results(locals(instrs(RPAREN)))) [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN PARAM ID valtype RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN PARAM RPAREN VALTYPE
##
## Ends in an error in state: 464.
##
## params(results(locals(instrs(RPAREN)))) -> LPAREN PARAM list(valtype) RPAREN . params(results(locals(instrs(RPAREN)))) [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN PARAM list(valtype) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN IMPORT VALTYPE
##
## Ends in an error in state: 468.
##
## exports(__anonymous_4) -> LPAREN IMPORT . name name RPAREN [ RPAREN LPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN IMPORT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN IMPORT STRING VALTYPE
##
## Ends in an error in state: 469.
##
## exports(__anonymous_4) -> LPAREN IMPORT name . name RPAREN [ RPAREN LPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN IMPORT name
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN IMPORT STRING STRING VALTYPE
##
## Ends in an error in state: 470.
##
## exports(__anonymous_4) -> LPAREN IMPORT name name . RPAREN [ RPAREN LPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN IMPORT name name
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN EXPORT VALTYPE
##
## Ends in an error in state: 472.
##
## exports(__anonymous_4) -> LPAREN EXPORT . name RPAREN exports(__anonymous_4) [ RPAREN LPAREN ]
## exports(typeuse(locals(instrs(RPAREN)))) -> LPAREN EXPORT . name RPAREN exports(typeuse(locals(instrs(RPAREN)))) [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN EXPORT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN EXPORT STRING VALTYPE
##
## Ends in an error in state: 473.
##
## exports(__anonymous_4) -> LPAREN EXPORT name . RPAREN exports(__anonymous_4) [ RPAREN LPAREN ]
## exports(typeuse(locals(instrs(RPAREN)))) -> LPAREN EXPORT name . RPAREN exports(typeuse(locals(instrs(RPAREN)))) [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN EXPORT name
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN EXPORT STRING RPAREN VALTYPE
##
## Ends in an error in state: 474.
##
## exports(__anonymous_4) -> LPAREN EXPORT name RPAREN . exports(__anonymous_4) [ RPAREN LPAREN ]
## exports(typeuse(locals(instrs(RPAREN)))) -> LPAREN EXPORT name RPAREN . exports(typeuse(locals(instrs(RPAREN)))) [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN EXPORT name RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN IMPORT STRING STRING RPAREN VALTYPE
##
## Ends in an error in state: 480.
##
## func -> LPAREN FUNC option(ID) exports(__anonymous_4) . typeuse(__anonymous_5) RPAREN [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN FUNC option(ID) exports(__anonymous_4)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN IMPORT STRING STRING RPAREN LPAREN VALTYPE
##
## Ends in an error in state: 481.
##
## params(results(__anonymous_5)) -> LPAREN . PARAM ID valtype RPAREN params(results(__anonymous_5)) [ RPAREN ]
## params(results(__anonymous_5)) -> LPAREN . PARAM list(valtype) RPAREN params(results(__anonymous_5)) [ RPAREN ]
## results(__anonymous_5) -> LPAREN . RESULT list(valtype) RPAREN results(__anonymous_5) [ RPAREN ]
## typeuse(__anonymous_5) -> LPAREN . TYPE idx RPAREN params_and_results(__anonymous_5) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN IMPORT STRING STRING RPAREN LPAREN TYPE VALTYPE
##
## Ends in an error in state: 482.
##
## typeuse(__anonymous_5) -> LPAREN TYPE . idx RPAREN params_and_results(__anonymous_5) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN IMPORT STRING STRING RPAREN LPAREN TYPE NAT VALTYPE
##
## Ends in an error in state: 483.
##
## typeuse(__anonymous_5) -> LPAREN TYPE idx . RPAREN params_and_results(__anonymous_5) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN TYPE idx
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN IMPORT STRING STRING RPAREN LPAREN TYPE NAT RPAREN VALTYPE
##
## Ends in an error in state: 484.
##
## typeuse(__anonymous_5) -> LPAREN TYPE idx RPAREN . params_and_results(__anonymous_5) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN TYPE idx RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN IMPORT STRING STRING RPAREN LPAREN PARAM RPAREN LPAREN VALTYPE
##
## Ends in an error in state: 485.
##
## params(results(__anonymous_5)) -> LPAREN . PARAM ID valtype RPAREN params(results(__anonymous_5)) [ RPAREN ]
## params(results(__anonymous_5)) -> LPAREN . PARAM list(valtype) RPAREN params(results(__anonymous_5)) [ RPAREN ]
## results(__anonymous_5) -> LPAREN . RESULT list(valtype) RPAREN results(__anonymous_5) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN IMPORT STRING STRING RPAREN LPAREN RESULT TYPE
##
## Ends in an error in state: 486.
##
## results(__anonymous_5) -> LPAREN RESULT . list(valtype) RPAREN results(__anonymous_5) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN RESULT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN IMPORT STRING STRING RPAREN LPAREN RESULT RPAREN VALTYPE
##
## Ends in an error in state: 488.
##
## results(__anonymous_5) -> LPAREN RESULT list(valtype) RPAREN . results(__anonymous_5) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN RESULT list(valtype) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN IMPORT STRING STRING RPAREN LPAREN RESULT RPAREN LPAREN VALTYPE
##
## Ends in an error in state: 489.
##
## results(__anonymous_5) -> LPAREN . RESULT list(valtype) RPAREN results(__anonymous_5) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN IMPORT STRING STRING RPAREN LPAREN PARAM TYPE
##
## Ends in an error in state: 491.
##
## params(results(__anonymous_5)) -> LPAREN PARAM . ID valtype RPAREN params(results(__anonymous_5)) [ RPAREN ]
## params(results(__anonymous_5)) -> LPAREN PARAM . list(valtype) RPAREN params(results(__anonymous_5)) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN PARAM
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN IMPORT STRING STRING RPAREN LPAREN PARAM ID TYPE
##
## Ends in an error in state: 492.
##
## params(results(__anonymous_5)) -> LPAREN PARAM ID . valtype RPAREN params(results(__anonymous_5)) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN PARAM ID
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN IMPORT STRING STRING RPAREN LPAREN PARAM ID VALTYPE VALTYPE
##
## Ends in an error in state: 493.
##
## params(results(__anonymous_5)) -> LPAREN PARAM ID valtype . RPAREN params(results(__anonymous_5)) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN PARAM ID valtype
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN IMPORT STRING STRING RPAREN LPAREN PARAM ID VALTYPE RPAREN VALTYPE
##
## Ends in an error in state: 494.
##
## params(results(__anonymous_5)) -> LPAREN PARAM ID valtype RPAREN . params(results(__anonymous_5)) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN PARAM ID valtype RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN FUNC LPAREN IMPORT STRING STRING RPAREN LPAREN PARAM RPAREN VALTYPE
##
## Ends in an error in state: 498.
##
## params(results(__anonymous_5)) -> LPAREN PARAM list(valtype) RPAREN . params(results(__anonymous_5)) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN PARAM list(valtype) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN EXPORT VALTYPE
##
## Ends in an error in state: 505.
##
## export -> LPAREN EXPORT . name exportdesc RPAREN [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN EXPORT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN EXPORT STRING VALTYPE
##
## Ends in an error in state: 506.
##
## export -> LPAREN EXPORT name . exportdesc RPAREN [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN EXPORT name
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN EXPORT STRING LPAREN VALTYPE
##
## Ends in an error in state: 507.
##
## exportdesc -> LPAREN . FUNC idx RPAREN [ RPAREN ]
## exportdesc -> LPAREN . GLOBAL idx RPAREN [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN EXPORT STRING LPAREN GLOBAL VALTYPE
##
## Ends in an error in state: 508.
##
## exportdesc -> LPAREN GLOBAL . idx RPAREN [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN GLOBAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN EXPORT STRING LPAREN GLOBAL NAT VALTYPE
##
## Ends in an error in state: 509.
##
## exportdesc -> LPAREN GLOBAL idx . RPAREN [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN GLOBAL idx
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN EXPORT STRING LPAREN FUNC VALTYPE
##
## Ends in an error in state: 511.
##
## exportdesc -> LPAREN FUNC . idx RPAREN [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN FUNC
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN EXPORT STRING LPAREN FUNC NAT VALTYPE
##
## Ends in an error in state: 512.
##
## exportdesc -> LPAREN FUNC idx . RPAREN [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN FUNC idx
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN EXPORT STRING LPAREN FUNC NAT RPAREN VALTYPE
##
## Ends in an error in state: 514.
##
## export -> LPAREN EXPORT name exportdesc . RPAREN [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN EXPORT name exportdesc
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN DATA VALTYPE
##
## Ends in an error in state: 516.
##
## data -> LPAREN DATA . option(ID) datastring RPAREN [ RPAREN LPAREN EOF ]
## data -> LPAREN DATA . option(ID) LPAREN MEMORY idx RPAREN LPAREN OFFSET expr RPAREN datastring RPAREN [ RPAREN LPAREN EOF ]
## data -> LPAREN DATA . option(ID) LPAREN OFFSET expr RPAREN datastring RPAREN [ RPAREN LPAREN EOF ]
## data -> LPAREN DATA . option(ID) LPAREN MEMORY idx RPAREN LPAREN instr RPAREN datastring RPAREN [ RPAREN LPAREN EOF ]
## data -> LPAREN DATA . option(ID) LPAREN instr RPAREN datastring RPAREN [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN DATA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN DATA ID VALTYPE
##
## Ends in an error in state: 517.
##
## data -> LPAREN DATA option(ID) . datastring RPAREN [ RPAREN LPAREN EOF ]
## data -> LPAREN DATA option(ID) . LPAREN MEMORY idx RPAREN LPAREN OFFSET expr RPAREN datastring RPAREN [ RPAREN LPAREN EOF ]
## data -> LPAREN DATA option(ID) . LPAREN OFFSET expr RPAREN datastring RPAREN [ RPAREN LPAREN EOF ]
## data -> LPAREN DATA option(ID) . LPAREN MEMORY idx RPAREN LPAREN instr RPAREN datastring RPAREN [ RPAREN LPAREN EOF ]
## data -> LPAREN DATA option(ID) . LPAREN instr RPAREN datastring RPAREN [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN DATA option(ID)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN DATA STRING VALTYPE
##
## Ends in an error in state: 518.
##
## list(STRING) -> STRING . list(STRING) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## STRING
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN DATA LPAREN VALTYPE
##
## Ends in an error in state: 520.
##
## data -> LPAREN DATA option(ID) LPAREN . MEMORY idx RPAREN LPAREN OFFSET expr RPAREN datastring RPAREN [ RPAREN LPAREN EOF ]
## data -> LPAREN DATA option(ID) LPAREN . OFFSET expr RPAREN datastring RPAREN [ RPAREN LPAREN EOF ]
## data -> LPAREN DATA option(ID) LPAREN . MEMORY idx RPAREN LPAREN instr RPAREN datastring RPAREN [ RPAREN LPAREN EOF ]
## data -> LPAREN DATA option(ID) LPAREN . instr RPAREN datastring RPAREN [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN DATA option(ID) LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN DATA LPAREN RETURN_CALL_INDIRECT VALTYPE
##
## Ends in an error in state: 521.
##
## callindirect(__anonymous_0) -> RETURN_CALL_INDIRECT . idx typeuse(__anonymous_0) [ RPAREN ]
## callindirect(__anonymous_0) -> RETURN_CALL_INDIRECT . typeuse(__anonymous_0) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## RETURN_CALL_INDIRECT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN DATA LPAREN CALL_INDIRECT LPAREN VALTYPE
##
## Ends in an error in state: 522.
##
## params(results(__anonymous_0)) -> LPAREN . PARAM ID valtype RPAREN params(results(__anonymous_0)) [ RPAREN ]
## params(results(__anonymous_0)) -> LPAREN . PARAM list(valtype) RPAREN params(results(__anonymous_0)) [ RPAREN ]
## results(__anonymous_0) -> LPAREN . RESULT list(valtype) RPAREN results(__anonymous_0) [ RPAREN ]
## typeuse(__anonymous_0) -> LPAREN . TYPE idx RPAREN params_and_results(__anonymous_0) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN DATA LPAREN CALL_INDIRECT LPAREN TYPE VALTYPE
##
## Ends in an error in state: 523.
##
## typeuse(__anonymous_0) -> LPAREN TYPE . idx RPAREN params_and_results(__anonymous_0) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN DATA LPAREN CALL_INDIRECT LPAREN TYPE NAT VALTYPE
##
## Ends in an error in state: 524.
##
## typeuse(__anonymous_0) -> LPAREN TYPE idx . RPAREN params_and_results(__anonymous_0) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN TYPE idx
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN DATA LPAREN CALL_INDIRECT LPAREN TYPE NAT RPAREN VALTYPE
##
## Ends in an error in state: 525.
##
## typeuse(__anonymous_0) -> LPAREN TYPE idx RPAREN . params_and_results(__anonymous_0) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN TYPE idx RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN DATA LPAREN CALL_INDIRECT LPAREN PARAM RPAREN LPAREN VALTYPE
##
## Ends in an error in state: 526.
##
## params(results(__anonymous_0)) -> LPAREN . PARAM ID valtype RPAREN params(results(__anonymous_0)) [ RPAREN ]
## params(results(__anonymous_0)) -> LPAREN . PARAM list(valtype) RPAREN params(results(__anonymous_0)) [ RPAREN ]
## results(__anonymous_0) -> LPAREN . RESULT list(valtype) RPAREN results(__anonymous_0) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN DATA LPAREN CALL_INDIRECT LPAREN RESULT TYPE
##
## Ends in an error in state: 527.
##
## results(__anonymous_0) -> LPAREN RESULT . list(valtype) RPAREN results(__anonymous_0) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN RESULT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN DATA LPAREN CALL_INDIRECT LPAREN RESULT RPAREN VALTYPE
##
## Ends in an error in state: 529.
##
## results(__anonymous_0) -> LPAREN RESULT list(valtype) RPAREN . results(__anonymous_0) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN RESULT list(valtype) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN DATA LPAREN CALL_INDIRECT LPAREN RESULT RPAREN LPAREN VALTYPE
##
## Ends in an error in state: 530.
##
## results(__anonymous_0) -> LPAREN . RESULT list(valtype) RPAREN results(__anonymous_0) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN DATA LPAREN CALL_INDIRECT LPAREN PARAM TYPE
##
## Ends in an error in state: 532.
##
## params(results(__anonymous_0)) -> LPAREN PARAM . ID valtype RPAREN params(results(__anonymous_0)) [ RPAREN ]
## params(results(__anonymous_0)) -> LPAREN PARAM . list(valtype) RPAREN params(results(__anonymous_0)) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN PARAM
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN DATA LPAREN CALL_INDIRECT LPAREN PARAM ID TYPE
##
## Ends in an error in state: 533.
##
## params(results(__anonymous_0)) -> LPAREN PARAM ID . valtype RPAREN params(results(__anonymous_0)) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN PARAM ID
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN DATA LPAREN CALL_INDIRECT LPAREN PARAM ID VALTYPE VALTYPE
##
## Ends in an error in state: 534.
##
## params(results(__anonymous_0)) -> LPAREN PARAM ID valtype . RPAREN params(results(__anonymous_0)) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN PARAM ID valtype
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN DATA LPAREN CALL_INDIRECT LPAREN PARAM ID VALTYPE RPAREN VALTYPE
##
## Ends in an error in state: 535.
##
## params(results(__anonymous_0)) -> LPAREN PARAM ID valtype RPAREN . params(results(__anonymous_0)) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN PARAM ID valtype RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN DATA LPAREN CALL_INDIRECT LPAREN PARAM RPAREN VALTYPE
##
## Ends in an error in state: 539.
##
## params(results(__anonymous_0)) -> LPAREN PARAM list(valtype) RPAREN . params(results(__anonymous_0)) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN PARAM list(valtype) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN DATA LPAREN RETURN_CALL_INDIRECT NAT VALTYPE
##
## Ends in an error in state: 545.
##
## callindirect(__anonymous_0) -> RETURN_CALL_INDIRECT idx . typeuse(__anonymous_0) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## RETURN_CALL_INDIRECT idx
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN DATA LPAREN OFFSET VALTYPE
##
## Ends in an error in state: 547.
##
## data -> LPAREN DATA option(ID) LPAREN OFFSET . expr RPAREN datastring RPAREN [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN DATA option(ID) LPAREN OFFSET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN DATA LPAREN OFFSET RPAREN VALTYPE
##
## Ends in an error in state: 549.
##
## data -> LPAREN DATA option(ID) LPAREN OFFSET expr RPAREN . datastring RPAREN [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN DATA option(ID) LPAREN OFFSET expr RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN DATA LPAREN MEMORY VALTYPE
##
## Ends in an error in state: 553.
##
## data -> LPAREN DATA option(ID) LPAREN MEMORY . idx RPAREN LPAREN OFFSET expr RPAREN datastring RPAREN [ RPAREN LPAREN EOF ]
## data -> LPAREN DATA option(ID) LPAREN MEMORY . idx RPAREN LPAREN instr RPAREN datastring RPAREN [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN DATA option(ID) LPAREN MEMORY
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN DATA LPAREN MEMORY NAT VALTYPE
##
## Ends in an error in state: 554.
##
## data -> LPAREN DATA option(ID) LPAREN MEMORY idx . RPAREN LPAREN OFFSET expr RPAREN datastring RPAREN [ RPAREN LPAREN EOF ]
## data -> LPAREN DATA option(ID) LPAREN MEMORY idx . RPAREN LPAREN instr RPAREN datastring RPAREN [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN DATA option(ID) LPAREN MEMORY idx
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN DATA LPAREN MEMORY NAT RPAREN VALTYPE
##
## Ends in an error in state: 555.
##
## data -> LPAREN DATA option(ID) LPAREN MEMORY idx RPAREN . LPAREN OFFSET expr RPAREN datastring RPAREN [ RPAREN LPAREN EOF ]
## data -> LPAREN DATA option(ID) LPAREN MEMORY idx RPAREN . LPAREN instr RPAREN datastring RPAREN [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN DATA option(ID) LPAREN MEMORY idx RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN DATA LPAREN MEMORY NAT RPAREN LPAREN VALTYPE
##
## Ends in an error in state: 556.
##
## data -> LPAREN DATA option(ID) LPAREN MEMORY idx RPAREN LPAREN . OFFSET expr RPAREN datastring RPAREN [ RPAREN LPAREN EOF ]
## data -> LPAREN DATA option(ID) LPAREN MEMORY idx RPAREN LPAREN . instr RPAREN datastring RPAREN [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN DATA option(ID) LPAREN MEMORY idx RPAREN LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN DATA LPAREN MEMORY NAT RPAREN LPAREN OFFSET VALTYPE
##
## Ends in an error in state: 557.
##
## data -> LPAREN DATA option(ID) LPAREN MEMORY idx RPAREN LPAREN OFFSET . expr RPAREN datastring RPAREN [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN DATA option(ID) LPAREN MEMORY idx RPAREN LPAREN OFFSET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN DATA LPAREN MEMORY NAT RPAREN LPAREN OFFSET RPAREN VALTYPE
##
## Ends in an error in state: 559.
##
## data -> LPAREN DATA option(ID) LPAREN MEMORY idx RPAREN LPAREN OFFSET expr RPAREN . datastring RPAREN [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN DATA option(ID) LPAREN MEMORY idx RPAREN LPAREN OFFSET expr RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN DATA LPAREN CALL_INDIRECT VALTYPE
##
## Ends in an error in state: 562.
##
## callindirect(__anonymous_0) -> CALL_INDIRECT . idx typeuse(__anonymous_0) [ RPAREN ]
## callindirect(__anonymous_0) -> CALL_INDIRECT . typeuse(__anonymous_0) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## CALL_INDIRECT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN DATA LPAREN CALL_INDIRECT NAT VALTYPE
##
## Ends in an error in state: 564.
##
## callindirect(__anonymous_0) -> CALL_INDIRECT idx . typeuse(__anonymous_0) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## CALL_INDIRECT idx
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN DATA LPAREN MEMORY NAT RPAREN LPAREN I31_GET VALTYPE
##
## Ends in an error in state: 567.
##
## data -> LPAREN DATA option(ID) LPAREN MEMORY idx RPAREN LPAREN instr . RPAREN datastring RPAREN [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN DATA option(ID) LPAREN MEMORY idx RPAREN LPAREN instr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN DATA LPAREN MEMORY NAT RPAREN LPAREN CALL_INDIRECT RPAREN VALTYPE
##
## Ends in an error in state: 568.
##
## data -> LPAREN DATA option(ID) LPAREN MEMORY idx RPAREN LPAREN instr RPAREN . datastring RPAREN [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN DATA option(ID) LPAREN MEMORY idx RPAREN LPAREN instr RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN DATA LPAREN I31_GET VALTYPE
##
## Ends in an error in state: 574.
##
## data -> LPAREN DATA option(ID) LPAREN instr . RPAREN datastring RPAREN [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN DATA option(ID) LPAREN instr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: LPAREN DATA LPAREN CALL_INDIRECT RPAREN VALTYPE
##
## Ends in an error in state: 575.
##
## data -> LPAREN DATA option(ID) LPAREN instr RPAREN . datastring RPAREN [ RPAREN LPAREN EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN DATA option(ID) LPAREN instr RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>
